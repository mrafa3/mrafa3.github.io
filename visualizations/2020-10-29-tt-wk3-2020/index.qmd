---
title: "Analyzing relative password strength"
# description: "Tidy Tuesday: Week 38, 2019"
author:
  - name: Mickey Rafa
    url: https://mrafa3.github.io/
date: 12-30-2022
categories: [R, "#TidyTuesday", jitter-plot] # self-defined categories
image: "tt_2020_3_thumbnail.png"
draft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!

format:
  html:
    toc: true
    toc-depth: 5
    code-link: true
    code-fold: true
    code-tools: true
    code-summary: "Show code"
    self-contained: true

editor_options: 
  chunk_output_type: inline
  
execute: 
  error: false
  message: false
  warning: false
  eval: true
---

![Visualizing the relative password strength by categories of passwords. "rush2112" is the strongest password in the dataset. Source: Knowledge is Beautiful password dataset.](tt_2020_3.png){#fig-1}

# 1. Load Packages & Setup

```{r setup, include=TRUE}
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
    tidyverse,
    tidytuesdayR,
    dlookr,
    ggtext,
    gt,
    gtExtras,  #for font awesome icons in gt tables
    ggbump,
    showtext,
    janitor,   #for clean_names()
    scales,
    htmltools, #for tagList()
    glue,
    here,
    geomtextpath
)    

font_add('fa-brands', 'fonts/Font Awesome 6 Brands-Regular-400.otf')
font_add_google("Courier Prime")
```

# 2. Read in the Data

```{r read_data, include=TRUE}
tt_year <- 2020
tt_week <- 3

tuesdata <- tidytuesdayR::tt_load(tt_year, week = tt_week)
passwords <- tuesdata$passwords
```

# 3. Examine the Data 

```{r examine, include=TRUE, echo=TRUE}
passwords %>% 
  glimpse()

passwords %>% 
  summary()
```

# 4. Tidy the Data 

```{r passwords_grp, include=TRUE}
passwords_grp <- passwords %>% 
  filter(!is.na(category)) %>% 
  group_by(category) %>% 
  mutate(mean_password_strength = mean(strength),
         median_password_strength = median(strength))
```

# 5. Visualization Parameters 

```{r my_theme, include=TRUE}
my_theme <- theme(
  text = element_text(size = 16, family = "Courier Prime", color = 'black'),
  axis.title = element_text(face="bold"), 
  axis.ticks = element_blank(), 
  plot.background = element_blank(),
  panel.background =  element_blank(), 
  legend.background = element_blank(), 
  panel.grid.major = element_line(colour = "grey90", linewidth = 0.25),
  panel.grid.minor = element_line(colour = "grey93", linewidth = 0.25),
  panel.border = element_blank(), 
  legend.position = 'none')
```

# 6. Plot 

```{r strength_viz, include=TRUE, fig.width=10, fig.height=6, fig.align='center'}
strength_viz <- passwords_grp %>% 
  ggplot(.,
         aes(x=strength,
                 y=reorder(category, 
                           median_password_strength))) + 
  geom_jitter(aes(color=category),
              height=.2, width = .5, size = .8) + 
  geom_vline(aes(xintercept = median(strength)),
             linetype='dashed') + 
  ggrepel::geom_text_repel(data=. %>%
                             ungroup() %>%
                             slice_max(strength),
                            aes(label=password),
                           force=10,
                           vjust = 6,
                           family='Courier Prime',
                           box.padding = 1,
                           size=7) +
  labs(x='Relative strength of password',
       y='',
       title='Relative **password strength** by category',
       subtitle = "Each dot represents a unique password from the Knowledge is Beautiful password database<br>**rush2112** is the password with the highest strength score in the dataset",
       caption='Tidy Tuesday Week 3 (2020)<br>**Source**: Knowledge is Beautiful') + 
  my_theme + 
  theme(plot.title = element_markdown(size=rel(2.25), hjust=0, margin = margin(b = 5)),
        plot.subtitle = element_textbox_simple(size=rel(1.3), hjust=0, margin = margin(t = 10, b = 15), lineheight = .4),
        plot.caption = element_textbox_simple(size=rel(1.25), margin = margin(t = 10), lineheight = .4),
        axis.text = element_text(size=rel(1.5)))
```

# 7. Save 

```{r save_plot, include=TRUE}
# Save the plot as PNG
ggsave(
  filename = glue("tt_{tt_year}_{tt_week}.png"),
  plot = strength_viz,
  width = 5, height = 3.5, units = "in",
  dpi = 320
)

# make thumbnail for page
magick::image_read(glue("tt_{tt_year}_{tt_week}.png")) %>%
  magick::image_resize(geometry = "400") %>%
  magick::image_write(glue("tt_{tt_year}_{tt_week}_thumbnail.png"))
```

# 8. Session Info

::: {.callout-tip collapse="true"}
##### Expand for Session Info

```{r, echo = FALSE}
sessionInfo()
```
:::

# 9. Github Repository 

::: {.callout-tip collapse="true"}

##### Expand for GitHub Repo
 
[Access the GitHub repository here](https://github.com/mrafa3/mrafa3.github.io)
:::