---
title: "Visualizing the Himalayas and expeditions over time"
description: "Using data from the Himalayan Database to put the scope and expedition activity into perspective"
author:
  - name: Mickey Rafa
    url: https://mrafa3.github.io/
date: 09-22-2020
categories: [R, "#TidyTuesday", histogram, line-plot] # self-defined categories
image: "tt_2020_39_hist_thumbnail.png"
draft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!

format:
  html:
    toc: true
    toc-depth: 5
    code-link: true
    code-fold: true
    code-tools: true
    code-summary: "Show code"
    self-contained: true

editor_options: 
  chunk_output_type: inline
  
execute: 
  error: false
  message: false
  warning: false
  eval: true
---

![Histogram showing the distribution of peak heights in the Himalayas. **Source**:The Himalayan Database.](tt_2020_39_hist.png){#fig-1}

![Line plot showing the rise in the number of expeditions on Mount Everest over time. **Source**:The Himalayan Database.](tt_2020_39_line.png){#fig-2}

# 1. Load Packages & Setup

```{r setup, include=TRUE}
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
    tidyverse,
    tidytuesdayR,
    ggtext,
    showtext,
    janitor,   #for clean_names()
    scales,
    glue,
    here
)    

font_add_google("Open Sans")
```

# 2. Read in the Data

```{r read_data, include=TRUE}
tt_year <- 2020
tt_week <- 39

tuesdata <- tidytuesdayR::tt_load(tt_year, week = tt_week)

peaks <- tuesdata$peaks
expeditions <- tuesdata$expeditions
```

# 3. Examine the Data 

```{r examine, include=TRUE, echo=TRUE}
peaks %>% 
  glimpse()

expeditions %>% 
  glimpse()
```

# 4. Tidy the Data 

```{r tidy_expedition, include=TRUE}
expedition_attempts <- peaks %>% 
  select(peak_id, height_metres) %>% 
  left_join(x=.,
            y=expeditions,
            by='peak_id') %>% 
  mutate(basecamp_year = year(basecamp_date)) %>% 
  group_by(peak_name, basecamp_year) %>% 
  summarise(count_expeditions = n(),
            .groups = 'drop') %>% 
  mutate(is_everest = if_else(peak_name == 'Everest',
                              'Everest', 'Other'))
```

# 5. Visualization Parameters 

```{r my_theme, include=TRUE}
my_theme <- theme(
  # choose font family
  text = element_text(family = 'Open Sans', size=14), 
  axis.ticks = element_blank(), 
  plot.background = element_rect(fill = "white", colour = NA),
  panel.background =  element_rect(fill = "white", colour = NA), 
  legend.position = 'none',
  panel.grid.major = element_blank(),
  panel.grid.minor = element_blank(),
  panel.border = element_blank())

arw <- arrow(length = unit(5, "pt"), type = "closed")
```

# 6. Plot 

#### Histogram 

```{r height_meters_hist, include=TRUE, fig.height=6.25, fig.width=10}
peak_hist_viz <- peaks %>% 
  ggplot(.) + 
  geom_histogram(aes(x=height_metres),
                 fill='slategray3',
                 color='gray80',
                 bins=30) + 
  geom_curve(data = data.frame(), 
             aes(x = 8600, y = 9, xend = 8850, yend = 4), 
             color = 'black', arrow = arw) +
  annotate("text", x=8600, y=11, label = 'Mt. Everest', family='Open Sans', size=7) + 
  ggtitle('Mount Everest is really tall',
          subtitle = 'Distribution of peak heights in the Himalayas') + 
  labs(x='<br>Height (meters)',
       y='Count',
       caption='<br>Tidy Tuesday Week 39 (2020)<br>**Source**:The Himalayan Database') + 
  scale_x_continuous(labels = comma) + 
  my_theme + 
  theme(plot.title = element_textbox(size=rel(2.7), face='bold'),
        plot.subtitle = element_text(size=rel(1.3)),
        plot.caption = element_textbox(size=rel(1.1), lineheight = .3),
        axis.title.y = element_textbox(hjust = 1, size=rel(1.3), face='bold'),
        axis.title.x = element_textbox(size=rel(1.3), face='bold'),
        axis.text = element_text(size=rel(1.4)))
```

#### Line plot 

```{r paving_everest_viz, include=TRUE, fig.height=6.25, fig.width=10}
paving_everest_viz <- expedition_attempts %>%
  ungroup() %>% 
  filter(complete.cases(.)) %>% 
  ggplot(.,
         aes(x=basecamp_year,
             y=count_expeditions,
             color=is_everest,
             size=is_everest)) + 
  geom_line(aes(group=peak_name)) + 
  geom_point(data=. %>% filter(basecamp_year == 2019,
                               peak_name == 'Everest')) + 
  annotate(geom = "text", x=2016, y=100,
           label='Everest',
           color='darkblue',
           size=6,
           fontface='bold') + 
  ggtitle('Paving Everest?',
          subtitle = 'Tracking the increase in expeditions over time of Himalayan peaks') + 
  labs(x='Year (of basecamp)<br>',
       y='Number of<br>expeditions',
       caption='Tidy Tuesday Week 39 (2020)<br>**Source**:The Himalayan Database') + 
  scale_size_manual(values = c('Everest' = 1.2,
                               'Other' = .8)) + 
  scale_color_manual(values = c('Everest' = 'darkblue',
                                'Other' = 'gray60')) + 
  scale_y_continuous(position = 'right',
                     breaks = seq(0, 90, by=30),  
                     labels = c('', '30', '60', '90')) + 
  my_theme + 
  theme(plot.title = element_textbox(size=rel(2.7), face='bold'),
        plot.subtitle = element_text(size=rel(1.3)),
        plot.caption = element_textbox(size=rel(1.1), lineheight = .3),
        axis.title.y = element_textbox(size=rel(1.3), face='bold', lineheight = .3),
        axis.title.x = element_textbox(size=rel(1.3), face='bold'),
        axis.text = element_text(size=rel(1.4)))
```

# 7. Save 

```{r save_plot, include=TRUE}
# Save the plot as PNG
ggsave(
  filename = glue("tt_{tt_year}_{tt_week}_hist.png"),
  plot = peak_hist_viz,
  width = 10, height = 6.25, units = "in", dpi = 320
)

ggsave(
  filename = glue("tt_{tt_year}_{tt_week}_line.png"),
  plot = paving_everest_viz,
  width = 10, height = 6.25, units = "in", dpi = 320
)

# make thumbnail for page
magick::image_read(glue("tt_{tt_year}_{tt_week}_hist.png")) %>%
  magick::image_resize(geometry = "400") %>%
  magick::image_write(glue("tt_{tt_year}_{tt_week}_hist_thumbnail.png"))

magick::image_read(glue("tt_{tt_year}_{tt_week}_line.png")) %>%
  magick::image_resize(geometry = "400") %>%
  magick::image_write(glue("tt_{tt_year}_{tt_week}_line_thumbnail.png"))
```

# 8. Session Info

::: {.callout-tip collapse="true"}
##### Expand for Session Info

```{r, echo = FALSE}
sessionInfo()
```
:::

# 9. Github Repository 

::: {.callout-tip collapse="true"}

##### Expand for GitHub Repo
 
[Access the GitHub repository here](https://github.com/mrafa3/mrafa3.github.io)
:::