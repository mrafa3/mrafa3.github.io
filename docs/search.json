[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "My Portfolio",
    "section": "",
    "text": "Query comparison: SQL, R, and Python using Chicago Employees dataset\n\n\n\nR\n\n\nSQL\n\n\nPython\n\n\nQuarto\n\n\ngenerative-AI\n\n\n\nThis post demonstrates how to run these languages in Quarto\n\n\n\nMickey Rafa\n\n\nJul 24, 2024\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nBuilding beautiful tables with the gt:: package in R\n\n\n\nR\n\n\nweb-scraping\n\n\ngt\n\n\nsports\n\n\n\nThis post outlines how to quickly scrape and clean data from Wikipedia and build a beautiful table in R\n\n\n\nMickey Rafa\n\n\nDec 23, 2022\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPART TWO: Mapping of African Health Clusters\n\n\n\nR\n\n\ndata-viz\n\n\ntidyverse\n\n\ninternational-development\n\n\ncluster-analysis\n\n\nmapping\n\n\n\nCreating maps of cluster results using ggplot\n\n\n\nMickey Rafa\n\n\nJun 18, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPART ONE: Cluster Analysis of African Health Outcomes\n\n\n\nR\n\n\ndata-viz\n\n\ntidyverse\n\n\ninternational-development\n\n\ncluster-analysis\n\n\n\nExploring how African countries cluster based on their health outcomes\n\n\n\nMickey Rafa\n\n\nJun 18, 2019\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nExperimenting with distance as a concept for SDG achievement\n\n\n\nR\n\n\ndata-viz\n\n\ntidyverse\n\n\ninternational-development\n\n\ncluster-analysis\n\n\nmapping\n\n\n\nExploring how to conceptualize and visualize distance from Sustainable Development Goal targets\n\n\n\nMickey Rafa\n\n\nApr 15, 2019\n\n\n\n\n\n\n\n\n\n\n\n\nAnimating the Gapminder dataset using gganimate\n\n\n\nR\n\n\ndata-viz\n\n\ntidyverse\n\n\ngganimate\n\n\n\nThis post outlines how to easily add animation to ggplot graphics\n\n\n\nMickey Rafa\n\n\nOct 15, 2017\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnalysis of Gapminder data using nested models in R\n\n\n\nR\n\n\nregression\n\n\ndata-viz\n\n\ntidyverse\n\n\ninternational-development\n\n\n\nThis post outlines the value in building nested models using the purrr and broom packages\n\n\n\nMickey Rafa\n\n\nOct 1, 2017\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "workshops.html",
    "href": "workshops.html",
    "title": "Workshops",
    "section": "",
    "text": "PART TWO: Data Manipulation and Visualization Basics using R\n\n\n\nR\n\n\ntidyverse\n\n\nggplot\n\n\ndata-viz\n\n\ndomestic-politics\n\n\n\nThis skills workshop introduced R and the tidyverse to Master’s students at the University of Denver\n\n\n\nMickey Rafa\n\n\nMay 15, 2018\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPART ONE: Data Manipulation and Visualization Basics using R\n\n\n\nR\n\n\ntidyverse\n\n\nggplot\n\n\ndata-viz\n\n\ninternational-development\n\n\n\nThis skills workshop introduced R and the tidyverse to Master’s students at the University of Denver\n\n\n\nMickey Rafa\n\n\nMay 15, 2018\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "In progress"
  },
  {
    "objectID": "posts/2024-07-24-chicago-employee-query-comparison/index.html",
    "href": "posts/2024-07-24-chicago-employee-query-comparison/index.html",
    "title": "Query comparison: SQL, R, and Python using Chicago Employees dataset",
    "section": "",
    "text": "This project has three purposes:\n\nTo show how to run R, SQL, and Python all interchangeably in a Quarto document\nTo compare the ease of writing code using dplyr (R), SQL, and pandas (Python)\nTo include some demonstration of SQL in my portfolio (which is often not included but remains a critical skill)\n\n\n\n\nRequired packages:\n\nlibrary(tidyverse)\nlibrary(httr)           #to fetch the data\nlibrary(readxl)\nlibrary(janitor)        #for the clean_names() function for data cleaning\n# library(sqldf)          #to run SQL in an R code-chunk\nlibrary(reticulate)     #to enable Python within R\nlibrary(DBI)            #to establish in-memory database of R dataframe\nlibrary(RSQLite)        #for SQLite engine\nlibrary(lubridate)      #for functions to handle dates\n\nAbout the dataset:\nThis dataset is from data.world, and includes information from Chicago’s Department of Human Resources for city employees in 2017. It’s a simple dataset to allow for comparisons across languages.\n\n# reading as a temporary file, then saving as df\nGET(\"https://query.data.world/s/hu5dkviuxd6k2ipuhpxjuyuds7aplu?dws=00000\", write_disk(tf &lt;- tempfile(fileext = \".xls\")))\n\nResponse [https://download.data.world/file_download/wbezchicago/chicago-employee-positions-and-salaries-for-2017/Employee%20Salary%20Data%20as%20of%20Sept.%202017.xls?auth=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50Om1yYWZhMyIsImlzcyI6ImFnZW50Om1yYWZhMzo6ODg0MjQ2ZDItMTgzMy00NmZjLTk2YTMtZjQ2MWMzMDJjOTZiIiwiaWF0IjoxNzIxODc0NzgyLCJyb2xlIjpbInVzZXIiLCJ1c2VyX2FwaV9hZG1pbiIsInVzZXJfYXBpX2VudGVycHJpc2VfYWRtaW4iLCJ1c2VyX2FwaV9yZWFkIiwidXNlcl9hcGlfd3JpdGUiXSwiZ2VuZXJhbC1wdXJwb3NlIjpmYWxzZSwidXJsIjoiMjM2ZDZlZGQ3NjdkZmVmOGRjYzM0Mzg3YTExMDQ1N2EzMmU1OGY3ZSJ9.oTr9PF0rrsLdVhewmy2v1vRgYvT0jy_PBmqhmrufaRSB25PEm48ZPxvswiSrZw8bNaACxDWpxwBiJVCVSaM-Zg]\n  Date: 2024-07-26 17:13\n  Status: 200\n  Content-Type: application/vnd.ms-excel\n  Size: 4.72 MB\n&lt;ON DISK&gt;  /var/folders/ck/dmgn8lbx6vl8sl89vlhr0sv00000gn/T//RtmpRFb3T4/filececf58beac81.xls\n\n\n\ndf &lt;- read_excel(tf) %&gt;% \n  #clean_names() to make all column names lowercase\n  clean_names()\n\n\n\nRows: 32,806\nColumns: 8\n$ name                           &lt;chr&gt; \"AARON,  JEFFERY M\", \"AARON,  KARINA\", …\n$ title                          &lt;chr&gt; \"SERGEANT\", \"POLICE OFFICER (ASSIGNED A…\n$ department                     &lt;chr&gt; \"POLICE\", \"POLICE\", \"FLEET AND FACILITY…\n$ salary_annual                  &lt;dbl&gt; 101442.0, 94122.0, 101592.0, 110064.0, …\n$ original_hire_date             &lt;dttm&gt; 2005-09-26, 2005-09-26, 1991-08-01, 19…\n$ start_date_in_present_position &lt;dttm&gt; 2016-06-01, 2017-04-16, 2000-05-01, 20…\n$ salary_basis                   &lt;chr&gt; \"SALARY\", \"SALARY\", \"SALARY\", \"SALARY\",…\n$ employment_category            &lt;chr&gt; \"Fulltime-Regular\", \"Fulltime-Regular\",…\n\n\n\n\n\nThe DBI:: package allows you to create an in-memory database to query against. The DBI project site is a great place to learn more about it. I’ll start by doing some initial setup and establishing the connection between the R dataframe and the SQL table name that I’ll query.\n\ncon &lt;- DBI::dbConnect(SQLite(), \":memory:\")\nDBI::dbWriteTable(conn = con, name = \"df\", value = df)\n\nThe reticulate:: package allows for executing Python code in an R environment. The reticulate project site includes useful examples for getting up and running with Python in R. This package includes an r_to_py() function that is needed to convert an R dataframe into a pandas dataframe.\n\npy$df &lt;- r_to_py(df)\n\nWhen inserting a code chunk to your Markdown file, it originally defaults to ‘{r}’. You can simply change this to ‘python’ or ‘sql’ and, with the above set up, the code works beautifully in a Quarto document!\nIn the sections that follow, I used ChatGPT to generate prompts as querying exercises. For the initial code chunks, I’ll display the code chunk options so that these can be replicated (if you are following along); for all prompts that follow, I’ll hide these options for a cleaner reading experience."
  },
  {
    "objectID": "posts/2024-07-24-chicago-employee-query-comparison/index.html#purpose",
    "href": "posts/2024-07-24-chicago-employee-query-comparison/index.html#purpose",
    "title": "Query comparison: SQL, R, and Python using Chicago Employees dataset",
    "section": "",
    "text": "This project has three purposes:\n\nTo show how to run R, SQL, and Python all interchangeably in a Quarto document\nTo compare the ease of writing code using dplyr (R), SQL, and pandas (Python)\nTo include some demonstration of SQL in my portfolio (which is often not included but remains a critical skill)"
  },
  {
    "objectID": "posts/2024-07-24-chicago-employee-query-comparison/index.html#setup-and-data-preparation",
    "href": "posts/2024-07-24-chicago-employee-query-comparison/index.html#setup-and-data-preparation",
    "title": "Query comparison: SQL, R, and Python using Chicago Employees dataset",
    "section": "",
    "text": "Required packages:\n\nlibrary(tidyverse)\nlibrary(httr)           #to fetch the data\nlibrary(readxl)\nlibrary(janitor)        #for the clean_names() function for data cleaning\n# library(sqldf)          #to run SQL in an R code-chunk\nlibrary(reticulate)     #to enable Python within R\nlibrary(DBI)            #to establish in-memory database of R dataframe\nlibrary(RSQLite)        #for SQLite engine\nlibrary(lubridate)      #for functions to handle dates\n\nAbout the dataset:\nThis dataset is from data.world, and includes information from Chicago’s Department of Human Resources for city employees in 2017. It’s a simple dataset to allow for comparisons across languages.\n\n# reading as a temporary file, then saving as df\nGET(\"https://query.data.world/s/hu5dkviuxd6k2ipuhpxjuyuds7aplu?dws=00000\", write_disk(tf &lt;- tempfile(fileext = \".xls\")))\n\nResponse [https://download.data.world/file_download/wbezchicago/chicago-employee-positions-and-salaries-for-2017/Employee%20Salary%20Data%20as%20of%20Sept.%202017.xls?auth=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiJwcm9kLXVzZXItY2xpZW50Om1yYWZhMyIsImlzcyI6ImFnZW50Om1yYWZhMzo6ODg0MjQ2ZDItMTgzMy00NmZjLTk2YTMtZjQ2MWMzMDJjOTZiIiwiaWF0IjoxNzIxODc0NzgyLCJyb2xlIjpbInVzZXIiLCJ1c2VyX2FwaV9hZG1pbiIsInVzZXJfYXBpX2VudGVycHJpc2VfYWRtaW4iLCJ1c2VyX2FwaV9yZWFkIiwidXNlcl9hcGlfd3JpdGUiXSwiZ2VuZXJhbC1wdXJwb3NlIjpmYWxzZSwidXJsIjoiMjM2ZDZlZGQ3NjdkZmVmOGRjYzM0Mzg3YTExMDQ1N2EzMmU1OGY3ZSJ9.oTr9PF0rrsLdVhewmy2v1vRgYvT0jy_PBmqhmrufaRSB25PEm48ZPxvswiSrZw8bNaACxDWpxwBiJVCVSaM-Zg]\n  Date: 2024-07-26 17:13\n  Status: 200\n  Content-Type: application/vnd.ms-excel\n  Size: 4.72 MB\n&lt;ON DISK&gt;  /var/folders/ck/dmgn8lbx6vl8sl89vlhr0sv00000gn/T//RtmpRFb3T4/filececf58beac81.xls\n\n\n\ndf &lt;- read_excel(tf) %&gt;% \n  #clean_names() to make all column names lowercase\n  clean_names()\n\n\n\nRows: 32,806\nColumns: 8\n$ name                           &lt;chr&gt; \"AARON,  JEFFERY M\", \"AARON,  KARINA\", …\n$ title                          &lt;chr&gt; \"SERGEANT\", \"POLICE OFFICER (ASSIGNED A…\n$ department                     &lt;chr&gt; \"POLICE\", \"POLICE\", \"FLEET AND FACILITY…\n$ salary_annual                  &lt;dbl&gt; 101442.0, 94122.0, 101592.0, 110064.0, …\n$ original_hire_date             &lt;dttm&gt; 2005-09-26, 2005-09-26, 1991-08-01, 19…\n$ start_date_in_present_position &lt;dttm&gt; 2016-06-01, 2017-04-16, 2000-05-01, 20…\n$ salary_basis                   &lt;chr&gt; \"SALARY\", \"SALARY\", \"SALARY\", \"SALARY\",…\n$ employment_category            &lt;chr&gt; \"Fulltime-Regular\", \"Fulltime-Regular\",…"
  },
  {
    "objectID": "posts/2024-07-24-chicago-employee-query-comparison/index.html#setting-up-python-and-sql-to-execute",
    "href": "posts/2024-07-24-chicago-employee-query-comparison/index.html#setting-up-python-and-sql-to-execute",
    "title": "Query comparison: SQL, R, and Python using Chicago Employees dataset",
    "section": "",
    "text": "The DBI:: package allows you to create an in-memory database to query against. The DBI project site is a great place to learn more about it. I’ll start by doing some initial setup and establishing the connection between the R dataframe and the SQL table name that I’ll query.\n\ncon &lt;- DBI::dbConnect(SQLite(), \":memory:\")\nDBI::dbWriteTable(conn = con, name = \"df\", value = df)\n\nThe reticulate:: package allows for executing Python code in an R environment. The reticulate project site includes useful examples for getting up and running with Python in R. This package includes an r_to_py() function that is needed to convert an R dataframe into a pandas dataframe.\n\npy$df &lt;- r_to_py(df)\n\nWhen inserting a code chunk to your Markdown file, it originally defaults to ‘{r}’. You can simply change this to ‘python’ or ‘sql’ and, with the above set up, the code works beautifully in a Quarto document!\nIn the sections that follow, I used ChatGPT to generate prompts as querying exercises. For the initial code chunks, I’ll display the code chunk options so that these can be replicated (if you are following along); for all prompts that follow, I’ll hide these options for a cleaner reading experience."
  }
]