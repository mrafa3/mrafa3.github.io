{
  "hash": "669ac7d65ba81f1baaa517ebc772161c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Analyzing Health Professional Shortage Areas in the U.S.\"\ndescription: \"This post shows how to make a beautiful U.S. map and create your own ggplot theme\"\nauthor:\n  - name: Mickey Rafa\n    url: https://mrafa3.github.io/\n    #orcid: 0000-0002-5300-3075\ndate: 10-02-2024\ncategories: [R, data-viz, mapping, tidyverse, mental-health, web-scraping] # self-defined categories\n#citation: \n # url: https://mrafa3.github.io/posts/2024-07-15-wikipedia-international-mens-soccer/ \n# image: theme_map.png\ndraft: true # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\ncode-annotations: hover\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n\n\n# Introduction\n\nI'm a big fan of the [*American Inequality*](https://americaninequality.substack.com/) project. *American Inequality* uses data storytelling and mapping to tell important stories about patterns of social and economic inequality across the U.S., including topics like food deserts, public school funding, and climate change vulnerability. In a recent post on mental health, *American Inequality* used a data on [Mental Healthcare Professional Shortage Areas](https://data.hrsa.gov/topics/health-workforce/shortage-areas), as measured by the U.S. Health Resources and Services Administration. After reading this analysis, I wanted to explore this dataset myself.\n\n## Purpose \n\nTo review and understand what is measured and available in the Healthcare Professional Shortage Areas data.\n\n## Setup\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggtext)\nlibrary(rvest)\nlibrary(dlookr)\nlibrary(glue)\nlibrary(maps)\nlibrary(sf)\nlibrary(patchwork)\n```\n:::\n\n\n\n\n\n\n\n# Data \n\n\n\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_hpsa <- read_csv('https://data.hrsa.gov/DataDownload/DD_Files/HPSA_DASHBOARD.csv',\n                    col_types = col_types) %>% \n  janitor::clean_names() %>%\n  select(-x26)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nNew names:\n• `` -> `...26`\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n\n\n:::\n\n```{.r .cell-code}\n# write_csv(df_hpsa, './/data/hpsa_download.csv')\n```\n:::\n\n\n\n\n\n## Prison populations data \n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_prison_pop <- read_html('https://www.prisonpolicy.org/data/prison_pops_2019_2023_sources.html') %>% \n  html_node(\"table\") %>%  # This selects the first table on the page\n  html_table() %>% \n  head(n = -2)\n\nnames(df_prison_pop) <- c(\"state\", \"prisonpop_2019\", \"prisonpop_2020\", \"prisonpop_2021\", \"prisonpop_2022\",\n                         \"prisonpop_2023\", \"source_2023\", \"source_url_2023\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_prison_pop <- df_prison_pop %>% \n  mutate(prisonpop_2023_derived = case_when(\n                                    str_starts(prisonpop_2023, \"No\") ~ prisonpop_2022,\n                                    TRUE ~ prisonpop_2023)\n         ) %>% \n  mutate(across(c('prisonpop_2019', 'prisonpop_2020', 'prisonpop_2021', 'prisonpop_2022', 'prisonpop_2023_derived'),\n                                 ~as.numeric(gsub(\"[^0-9.-]\", \"\", .))))\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_prison_pop %>% \n  top_n(10, prisonpop_2023_derived) %>% \n  ggplot(.) + \n  geom_col(aes(x=prisonpop_2023_derived,\n               y=reorder(state, prisonpop_2023_derived),\n               fill=if_else(state == 'Federal BOP', 'Federal BOP', 'Other'))) + \n  scale_x_continuous(labels = scales::comma) + \n  scale_fill_manual(values = bop_cols) + \n  ggtitle(glue(\"The <span style='color:#228B22'>**Federal Bureau of Prisons**</span> has a larger inmate<br>population than any state in 2023\"),\n          subtitle = '\\n') + \n  labs(x='',\n       y='',\n       caption='Source: Prison Policy Initiative\\nData for Texas from 2022') + \n  theme_american_inequality_map() + \n  theme(legend.position = 'none')\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/prisonpop_2023_top10-1.png){width=960}\n:::\n:::\n\n\n\n\n\nThe Federal Bureau of Prisons has the largest population in this dataset, so I'll need to find a way to assign this population to individual states. I found the BOP inmate population by facility on the [bop.gov/ website](https://www.bop.gov/about/statistics/population_statistics.jsp#old_pops), so I've brought that in and summed the population numbers by state. I'll apply the percent from each state to the Federal BOP population and add that to the state.\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 187 Columns: 3\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): X1, X2\ndbl (1): X3\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstates <- data.frame(\n  abbreviation = state.abb,\n  state_name = state.name,\n  stringsAsFactors = FALSE\n)\n\ndf_bop_grp <- df_bop_grp %>%\n  left_join(x=.,\n            y=states,\n            by=c('state' = 'abbreviation')) %>% \n  mutate(state_name = if_else(state == 'PR', 'Puerto Rico', state_name))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstates_map <- map_data(\"state\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 51 × 11\n   state       prisonpop_2019 prisonpop_2020 prisonpop_2021 prisonpop_2022\n   <chr>                <dbl>          <dbl>          <dbl>          <dbl>\n 1 Alabama              28304          25328          25032          26421\n 2 Alaska                4475           4578           4639           4778\n 3 Arizona              42441          37794          33914          33865\n 4 Arkansas             17759          16094          17022          17625\n 5 Federal BOP         175116         152156         157314         159309\n 6 California          122687         100396         101441          97608\n 7 Colorado             19785          16259          15865          17168\n 8 Connecticut          12823           9559           9889          10506\n 9 Delaware              5692           4710           4810           4954\n10 Florida              96009          81027          80417          84678\n# ℹ 41 more rows\n# ℹ 6 more variables: prisonpop_2023 <chr>, source_2023 <chr>,\n#   source_url_2023 <chr>, prisonpop_2023_derived <dbl>, prisonpop_bop <dbl>,\n#   perc_total_bop <dbl>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_hpsa %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 54,603\nColumns: 25\n$ discipline                                <fct> Mental Health, Mental Health…\n$ hhs_region                                <fct> Region 4, Region 5, Region 9…\n$ state                                     <fct> Tennessee, Minnesota, Califo…\n$ county                                    <chr> \"Shelby\", \"Hennepin\", \"San D…\n$ hpsa_id                                   <chr> \"7475929468\", \"7271101139\", …\n$ hpsa_name                                 <chr> \"LI-South Memphis/Whitehaven…\n$ hpsa_score                                <dbl> 19, 18, 17, 20, 25, 19, 19, …\n$ hpsa_type_category                        <fct> Population Group, Population…\n$ hpsa_type_code                            <fct> Hpsa Pop, Hpsa Pop, Hpsa Pop…\n$ hpsa_sub_type                             <fct> \"Low Income Population HPSA\"…\n$ hpsa_status                               <fct> Designated, Designated, Desi…\n$ rural_status                              <fct> Non-Rural, Non-Rural, Non-Ru…\n$ hpsa_status_code                          <fct> D, D, D, D, D, D, D, D, D, D…\n$ designation_date                          <date> 2013-04-05, 2022-03-28, 202…\n$ last_update_date                          <date> 2021-09-10, 2022-03-28, 202…\n$ hpsa_designation_population               <dbl> 128204, 64127, 61523, 15908,…\n$ hpsa_component_id                         <chr> NA, NA, NA, \"7049990439\", \"6…\n$ hpsa_component_name                       <chr> \"Census Tract 220.22, Shelby…\n$ hpsa_component_type                       <fct> Census Tract, Census Tract, …\n$ hpsa_facility_address                     <chr> NA, NA, NA, \"W Hospital Dr\",…\n$ hpsa_facility_city_and_state              <chr> NA, NA, NA, \"Show Low, AZ\", …\n$ hpsa_facility_zip_code                    <chr> NA, NA, NA, \"85901\", \"98057-…\n$ proper_county_name_and_state_abbreviation <chr> \"Shelby County, TN\", \"Hennep…\n$ as_of_date_close_of_business_date         <date> NA, NA, NA, NA, NA, NA, NA,…\n$ hrsa_data_warehouse_processing_date       <date> 2024-10-02, 2024-10-02, 202…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_hpsa %>% \n  diagnose()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 25 × 6\n   variables        types missing_count missing_percent unique_count unique_rate\n   <chr>            <chr>         <int>           <dbl>        <int>       <dbl>\n 1 discipline       fact…             0               0            3   0.0000549\n 2 hhs_region       fact…             0               0           10   0.000183 \n 3 state            fact…             0               0           59   0.00108  \n 4 county           char…             0               0         1966   0.0360   \n 5 hpsa_id          char…             0               0        20678   0.379    \n 6 hpsa_name        char…             0               0         9511   0.174    \n 7 hpsa_score       nume…             0               0           27   0.000494 \n 8 hpsa_type_categ… fact…             0               0            3   0.0000549\n 9 hpsa_type_code   fact…             0               0           10   0.000183 \n10 hpsa_sub_type    fact…             0               0           21   0.000385 \n# ℹ 15 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n## Exploratory Data Analysis\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_hpsa %>% \n  dlookr::diagnose_category()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 171 × 6\n   variables  levels            N  freq ratio  rank\n   <chr>      <chr>         <int> <int> <dbl> <int>\n 1 discipline Primary Care  54603 21446 39.3      1\n 2 discipline Mental Health 54603 16865 30.9      2\n 3 discipline Dental Health 54603 16292 29.8      3\n 4 hhs_region Region 9      54603 11851 21.7      1\n 5 hhs_region Region 5      54603 10489 19.2      2\n 6 hhs_region Region 4      54603  8097 14.8      3\n 7 hhs_region Region 2      54603  4973  9.11     4\n 8 hhs_region Region 6      54603  3996  7.32     5\n 9 hhs_region Region 10     54603  3719  6.81     6\n10 hhs_region Region 3      54603  3697  6.77     7\n# ℹ 161 more rows\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_hpsa %>% \n  filter(discipline == 'Mental Health',\n         hpsa_sub_type == 'Correctional Facility')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 537 × 25\n   discipline    hhs_region state          county   hpsa_id hpsa_name hpsa_score\n   <fct>         <fct>      <fct>          <chr>    <chr>   <chr>          <dbl>\n 1 Mental Health Region 4   Florida        Miami-D… 712494… South Fl…          6\n 2 Mental Health Region 8   Colorado       Denver   708575… CF-Denve…         12\n 3 Mental Health Region 4   North Carolina Anson    737226… Anson Co…         12\n 4 Mental Health Region 3   Pennsylvania   Luzerne  742962… State Co…         12\n 5 Mental Health Region 5   Indiana        Parke    718793… Rockvill…         12\n 6 Mental Health Region 8   Colorado       Crowley  708536… Arkansas…         24\n 7 Mental Health Region 9   California     Lassen   706794… Californ…         18\n 8 Mental Health Region 6   Arkansas       Jackson  705781… CF McPhe…         12\n 9 Mental Health Region 10  Washington     Franklin 753346… Coyote R…         21\n10 Mental Health Region 2   New York       St. Law… 736669… Rivervie…          6\n# ℹ 527 more rows\n# ℹ 18 more variables: hpsa_type_category <fct>, hpsa_type_code <fct>,\n#   hpsa_sub_type <fct>, hpsa_status <fct>, rural_status <fct>,\n#   hpsa_status_code <fct>, designation_date <date>, last_update_date <date>,\n#   hpsa_designation_population <dbl>, hpsa_component_id <chr>,\n#   hpsa_component_name <chr>, hpsa_component_type <fct>,\n#   hpsa_facility_address <chr>, hpsa_facility_city_and_state <chr>, …\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_hpsa %>% \n  ggplot(.) + \n  geom_histogram(aes(last_update_date))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n\n\n# Conclusion \n\n\nThis post demonstrates how to:\n\n*  Take control of `ggplot2` and its aesthetic elements\n*  Use the `sf::` package to pull in state boundaries and apply them as a layer to a map\n*  Use `patchwork::inset_element()` to overlay plots with full control\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}