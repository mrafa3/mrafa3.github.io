{
  "hash": "fe3d0d182270cc51e02914bd64f880e2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Part Three: Exploring even smaller geographies with tidycensus\"\ndescription: \"This post shows how to fetch data at smaller scales for analysis of Census data\"\nauthor:\n  - name: Mickey Rafa\n    url: https://mrafa3.github.io/\n    #orcid: 0000-0002-5300-3075\ndate: 08-20-2024\ncategories: [R, tidyverse, tidycensus, api, javascript, purrr] # self-defined categories\n#citation: \n # url: https://mrafa3.github.io/posts/2024-07-15-wikipedia-international-mens-soccer/ \n# image: facet_region.png\ndraft: true # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n# Introduction\n\nIn [Part One](https://mrafa3.github.io/posts/2024-08-13-tidycensus-exploration/), I demonstrated how to fetch data and do some basic analysis of U.S. Census data. Each API call with the `tidycensus::` package can only be for one year of data, so to do longitudinal analysis requires some additional wrangling. In this post, I'll build a script that iterates through the available years, fetches the data, then combines the data into a single dataframe. Then, I'll unpack some of the trends seen in child poverty in Colorado.\n\nIn [Part Two]()\n\nIn this post, I'd like to drill down further -- to the Census block level -- to demonstrate how to fetch, wrangle, and visualize data using `tidycensus::`.\n\n## Setup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(tidycensus)\nlibrary(scales)\nlibrary(janitor)\nlibrary(gt)\n\n# census_api_key('INSERT KEY HERE')\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n# Data\n\nFor this demo, I'll use the following series from the American Community Survey (ACS):\n\n-   *B01001_003*: Estimate!!Total:!!Male:!!Under 5 years (all racial\n    groups)\n-   *B01001_027*: Estimate!!Total:!!Female:!!Under 5 years (all racial\n    groups)\n-   *B17001_004*: Estimate!!Total:!!Income in the past 12 months below\n    poverty level:!!Male:!!Under 5 years\n-   *B17001_018*: Estimate!!Total:!!Income in the past 12 months below\n    poverty level:!!Female:!!Under 5 years\n\nWith the `tidycensus::` package, I can gather 5-year ACS data for these series from 2009 to 2022.[^1]\n\n[^1]: According to the `tidycensus::` documentation, 5-year ACS data is available from 2009 through 2022, with the exception of 2020.\n\n## Fetching from the `tidycensus::` API\n\n\n\n\n\n\nIn Part One, I used the `usmap::` package to quickly map state and county-level data. This package is handy for a quick US map, but it does have limitations, including:\n\n*  It doesn't map using ggplot2, so it's less customizable than I like, and\n*  It's only built for US maps of states and counties (and in this post, I want to map smaller areas).\n\nFortunately, `tidycensus::` is built for this, too! The `get_decennial()` and `get_acs()` functions have an argument for `geometry=`, which if set to TRUE, will return the polygons for your data along with the fields requested in the API call.\n\n\n# Conclusion\n\nIn this `tidycensus::` post, I demonstrated:\n\n-   How to fetch data across multiple years from the U.S. Census Bureau and wrangle the data for longitudinal analysis\n-   How to move between R or Python objects and Observable JS objects in Quarto \n-   How to make some simple interactive graphics with Observable Plot\n\nMore to come on poverty analysis in future posts!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}