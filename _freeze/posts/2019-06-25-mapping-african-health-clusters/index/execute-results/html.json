{
  "hash": "62f4263de3d03a06f044d4b134229269",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"PART TWO: Mapping of African Health Clusters\"\ndescription: \"Creating maps of cluster results using ggplot\"\nauthor:\n  - name: Mickey Rafa\n    url: https://mrafa3.github.io/\n    #orcid: 0000-0002-5300-3075\ndate: 06-18-2019\ncategories: [R, data-viz, tidyverse, international-development, cluster-analysis, mapping] # self-defined categories\n#citation: \n # url: https://mrafa3.github.io/posts/2024-07-15-wikipedia-international-mens-soccer/ \nimage: cluster_map.png\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(sf)\nlibrary(maps)\nlibrary(ggsci)\nlibrary(patchwork)\n```\n:::\n\n\nFirst, I'll read in the cluster analysis results from Part One.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nkmeans_viz_data <- read_csv('.//data/kmeans_viz_data.csv')\n```\n:::\n\n\nGet the country polygons from the `sf::` package.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nworld1 <- sf::st_as_sf(map('world', plot = FALSE, fill = TRUE))\n```\n:::\n\n\nPlot these polygons using `ggplot()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot() + \n  geom_sf(data = world1) + \n  coord_sf(xlim = c(-30, 60),\n            ylim = c(39, -37))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/test_plot_africa-1.png){width=672}\n:::\n:::\n\nCreate custom map themes.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap.theme <- theme(text = element_text(family = \"Arial\", color = \"black\"), \n                   panel.background = element_rect(fill = \"white\"),\n                   plot.background = element_rect(fill = \"white\"),\n                   #panel.grid = element_blank(),\n                   #panel.border = element_blank(),\n                   plot.title = element_text(size = 25, hjust = 0),\n                   plot.subtitle = element_text(size = 25),\n                   plot.caption = element_text(size = 20), \n                   axis.text = element_blank(),\n                   axis.title = element_blank(),\n                   axis.ticks = element_blank(),\n                   legend.position = \"inside\", \n                   legend.key.size = unit(.7, \"cm\"),\n                   legend.direction = \"horizontal\",\n                   legend.background = element_rect(fill=\"white\"))\n\nmap.theme.small <- theme(text = element_text(family = \"Arial\", color = \"black\"), \n                   panel.background = element_rect(fill = \"white\"),\n                   plot.background = element_rect(fill = \"white\"),\n                   panel.grid = element_blank(),\n                   plot.title = element_text(size = 8, face = 'bold', hjust = 0.5),\n                   plot.subtitle = element_text(size = 8),\n                   axis.text = element_blank(),\n                   axis.title = element_blank(),\n                   axis.ticks = element_blank(),\n                   legend.position = \"none\", \n                   legend.background = element_rect(fill=\"white\"),\n                   legend.title = element_blank())\n```\n:::\n\n\n# Mapping \n\nRecode some country names to make `sf::` and the cluster results compatible.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmap.world <- map_data(\"world\") %>% \n  mutate(region = recode(region, \n                         \"Central African Republic\" = \"Central AfR\",\n                         'Democratic Republic of the Congo' = 'Congo, Democratic Republic of',\n                         'Republic of Congo' = 'Congo, Republic of',\n                         'Equatorial Guinea' = 'Equa Guinea',\n                         'Guinea-Bissau' = 'GuineaBiss',\n                         'Ivory Coast' = \"Cote d'Ivoire\",\n                         'Sierra Leone' = 'SierraLeo', \n                         'South Sudan' = 'Sudan South'))\n```\n:::\n\n\n# Cluster maps\n\n\n::: {.cell}\n\n```{.r .cell-code}\njoined.world.map <- left_join(x=map.world,\n                             y=kmeans_viz_data,\n                             by=c('region' = 'country'))\n```\n:::\n\n\nUsing the coordinates from above to focus on Africa, I'll map the cluster results.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n(l_map_clust <- joined.world.map %>% \n  filter(africa == '1') %>% \n  ggplot(.) +\n  geom_polygon(aes(x = long, y = lat, group = group, fill = clust_name), color=\"gray90\") +\n  geom_polygon(data=. %>% filter(region == 'Western Sahara'),\n               aes(x = long, y = lat, group = group), fill = \"gray90\", color=\"gray90\") +\n  coord_map(xlim = c(-30, 60),\n            ylim = c(39, -37)) + \n  labs(fill = '') + \n  scale_fill_jco() + \n  map.theme + \n  guides(fill=guide_legend(nrow=2, byrow=TRUE)) + \n  theme(legend.position.inside = c(.2, .3)))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/l_map_clust-1.png){fig-align='center' width=960}\n:::\n:::\n\nI want to plot each of the island nations alongside the continental map, so that you can see their results more clearly. I'll generate a zoomed in map for each, and then use `patchwork::` to bring them all together.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(s_map_1 <- joined.world.map %>% \n  filter(africa == 1) %>% \n  ggplot(.) +\n  geom_polygon(aes(x = long, y = lat, group = group, fill = clust_name), color=\"gray90\") +\n  scale_fill_jco() + \n  ggtitle('Cabo Verde') + \n  coord_map(xlim = c(-25.5, -22.2), ylim = c(14.5, 17.8)) + \n  map.theme.small)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/s_map_1-1.png){width=192}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(s_map_2 <- joined.world.map %>% \n  filter(africa == 1) %>% \n  ggplot(.) +\n  geom_polygon(aes(x = long, y = lat, group = group, fill = clust_name), color=\"gray90\") +\n  scale_fill_jco() + \n  ggtitle('Comoros') + \n  coord_map(xlim = c(42.1, 45.4), ylim = c(-13.4, -10.1)) + \n  map.theme.small)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/s_map_2-1.png){width=192}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(s_map_3 <- joined.world.map %>% \n  filter(africa == 1) %>% \n  ggplot(.) +\n  geom_polygon(aes(x = long, y = lat, group = group, fill = clust_name), color=\"gray90\") +\n  scale_fill_jco() + \n  ggtitle('Mauritius') + \n  coord_map(xlim = c(56, 59.3), ylim = c(-22.3, -19)) + \n  map.theme.small)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/s_map_3-1.png){width=192}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(s_map_4 <- joined.world.map %>% \n  filter(africa == 1) %>% \n  ggplot(.) +\n  geom_polygon(aes(x = long, y = lat, group = group, fill = clust_name), color=\"gray90\") +\n  scale_fill_jco() + \n  ggtitle('Sao Tome and Principe') + \n  coord_map(xlim = c(5, 8.3), ylim = c(-.5, 2.8)) + \n  map.theme.small)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/s_map_4-1.png){width=192}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(s_map_5 <- joined.world.map %>% \n  filter(africa == 1) %>% \n  ggplot(.) +\n  geom_polygon(aes(x = long, y = lat, group = group, fill = clust_name), color=\"gray90\") +\n  scale_fill_jco() + \n  ggtitle('Seychelles') + \n  coord_map(xlim = c(55.2, 55.8), ylim = c(-4.9, -4.4)) + \n  map.theme.small)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/s_map_5-1.png){width=192}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(s_map_plot_grid <- s_map_1 / s_map_2 / s_map_3 / s_map_4 / s_map_5)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=288}\n:::\n:::\n\nNow, the final plot that brings them all together. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n(l_map_clust + s_map_plot_grid + plot_layout(widths = c(8, 1, 1)))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/combined_cluster_map-1.png){fig-align='center' width=960}\n:::\n:::\n\n\nThese results demonstrate that, while there are some discernible regional patterns in health outcomes, some countries in West, Central, and East Africa do not necessarily look like their neighbors.",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}