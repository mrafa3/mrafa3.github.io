{
  "hash": "4455d0e87132d6919d61c801cbcb3570",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Creating great U.S. county maps with advanced ggplot styling\"\ndescription: \"This post shows how to make a beautiful U.S. map and create your own ggplot theme\"\nauthor:\n  - name: Mickey Rafa\n    url: https://mrafa3.github.io/\n    #orcid: 0000-0002-5300-3075\ndate: 10-01-2024\ncategories: [R, data-viz, mapping, tidyverse, cdcplaces, api] # self-defined categories\n#citation: \n # url: https://mrafa3.github.io/posts/2024-07-15-wikipedia-international-mens-soccer/ \nimage: theme_map.png\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\ncode-annotations: hover\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n\n# Introduction\n\n\n## Purpose \n\n## Setup and the `CDCPLACES::` package\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(CDCPLACES)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: package 'CDCPLACES' was built under R version 4.4.1\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggtext)\nlibrary(maps)\nlibrary(sf)\nlibrary(patchwork)\n```\n:::\n\n\n\nIn [Part One](https://mrafa3.github.io/posts/2024-09-30-cdcplaces/), I used the `CDCPLACES::` package to easily access and visualize health data from the Centers for Disease Control. In this post, I'll demonstrate how to improve the visual style of a U.S. map, while using data from the CDC PLACES project.\n\n## Styling the map \n\nI really like the aesthetic of maps created by the American Inequality project, which uses Datawrapper as its visualization tool for their newsletter. There are several elements of their aesthetic that I think are effective (see the example map below):\n\n![A map showing the distribution of poor mental health days per month by U.S. county](american_inequality.png){width=100% fig-align=\"center\"}\n\n1.  The diverging color palette makes it very clear where counties stand[^1]\n2.  The font (Roboto) is a sans serif font, which is more friendly for visual accessibility\n3.  I like the positioning of the legend (top and horizontal), because I think it's an efficient use of space, and because it reduces the amount of eye movement between the map, to the legend, and back.\n4.  The state boundaries are more pronounced than the county boundaries, which makes the map more immediately relatable[^2]\n5.  The placement of Alaska and Hawaii allow for a condensed graphic, which I think is very clean for distributing in digital platforms\n\n[^1]: The `viridis::` package provides a set of palettes that have are approved for visual accessibility (for those with color vision deficiencies). Generally speaking, I think it's best to use these palettes, though they may present challenges when printed. \n[^2]: Aesthetically speaking, I also like the use of white for the boundaries.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_depression <- get_places(geography = 'county',\n                            measure = 'DEPRESSION',\n                            release = '2024',\n                            geometry = TRUE)\n```\n:::\n\n\n\n## Diverging palette\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(lower48_map <- df_depression %>% \n  filter(data_value_type == 'Crude prevalence',\n         !stateabbr %in% c('AK', 'HI')) %>% \n  ggplot(.) + \n  geom_sf(aes(fill=data_value/100)) + \n  coord_sf(datum = NA) + \n  scale_fill_gradient2(\n    low = \"#2469b3\",\n    mid = \"#f0eee5\",\n    high = \"#b6202c\",\n    midpoint = median(df_depression$data_value/100, na.rm = TRUE),\n    labels = scales::percent,\n    name = ''\n  ) + \n  ggtitle('Depression among adults aged >= 18 years',\n          subtitle = 'by U.S. county in 2022') + \n  labs(x='',\n       y='') + \n  labs(caption='Source: U.S. Centers for Disease Control (PLACES product)') + \n  guides(color='none') + \n  theme_minimal())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/lower48_map1-1.png){width=960}\n:::\n:::\n\n\n\n## Updating font and legend\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(lower48_map <- df_depression %>% \n  filter(data_value_type == 'Crude prevalence',\n         !stateabbr %in% c('AK', 'HI')) %>% \n  ggplot(.) + \n  geom_sf(aes(fill=data_value/100)) + \n  coord_sf(datum = NA) + \n  scale_fill_gradient2(\n    low = \"#2469b3\",\n    mid = \"#f0eee5\",\n    high = \"#b6202c\",\n    midpoint = median(df_depression$data_value/100, na.rm = TRUE),\n    labels = scales::percent,\n    name = ''\n  ) + \n  ggtitle('Rates of depression among adults are highest in\\nCentral Appalachia and the Bible Belt',\n          subtitle = '% of adults over 18 years old by U.S. county in 2022') + \n  labs(x='',\n       y='') + \n  labs(caption='Source: U.S. Centers for Disease Control (PLACES product)') + \n  guides(color='none') + \n  theme_minimal() + \n  theme(\n    text = element_text(family = 'Roboto Condensed'),\n    plot.title = element_text(face = 'bold', size=20),\n    plot.subtitle = element_text(size=14),\n    legend.position = \"top\",\n    legend.direction = \"horizontal\",\n    legend.key.height = unit(0.5, \"cm\"),\n    legend.key.width = unit(2, \"cm\"),\n    legend.title.position = \"top\",\n    legend.title = element_blank(),\n    legend.background = element_rect(fill = \"white\", color = NA),\n    legend.spacing.x = unit(0.2, 'cm')\n    ))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/lower48_map2-1.png){width=960}\n:::\n:::\n\n\n\n## Updating state boundaries \n\nI want to the map to have thicker state boundaries than county boundaries -- I think that's a nice look and a nice way to orient readers to differences in state outcomes. I'll use the `maps::map_data()` function to pull in the state boundaries and overlay those onto my county-based data.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstates <- map_data(\"state\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(lower48_map <- df_depression %>% \n  filter(data_value_type == 'Crude prevalence',\n         !stateabbr %in% c('AK', 'HI')) %>% \n  ggplot(.) + \n  geom_sf(aes(fill=data_value/100), color='white') + \n  # this is what imitates the Datawrapper aesthetic of thicker state borders than county borders\n  geom_polygon(data = states, \n               aes(x = long, y = lat, group = group),\n               fill = NA, color = \"white\", linewidth = 0.5) +\n  coord_sf(datum = NA) + \n  scale_fill_gradient2(\n    low = \"#2469b3\",\n    mid = \"#f0eee5\",\n    high = \"#b6202c\",\n    midpoint = median(df_depression$data_value/100, na.rm = TRUE),\n    labels = scales::percent,\n    name = ''\n  ) + \n  ggtitle('Depression among adults aged >= 18 years',\n          subtitle = 'by U.S. county in 2022') + \n  labs(x='',\n       y='') + \n  labs(caption='Source: U.S. Centers for Disease Control (PLACES product)') + \n  guides(color='none') + \n  theme_minimal() +\n  theme(\n    text = element_text(family = 'Roboto Condensed'),\n    plot.title = element_text(face = 'bold', size=20), \n    plot.subtitle = element_text(size=14),\n    legend.position = \"top\",\n    legend.direction = \"horizontal\",\n    legend.key.height = unit(0.5, \"cm\"),\n    legend.key.width = unit(2, \"cm\"),\n    legend.title.position = \"top\",\n    legend.title = element_blank(),\n    legend.background = element_rect(fill = \"white\", color = NA),\n    legend.spacing.x = unit(0.2, 'cm')\n  ))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/lower48_map3-1.png){width=960}\n:::\n:::\n\n\n\n## Including Alaska and Hawaii \n\nTo incorporate Alaska and Hawaii with the lower 48 map, I'll create individual maps for each and then use `patchwork::inset_element()` to overlay their images in the bottom left corner of the graphic.\n\n(Note: for these, I used Claude to provide me with the map projections and coordinates -- I didn't know these or use trial and error.)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(ak_map <- df_depression %>% \n  filter(data_value_type == 'Crude prevalence',\n         stateabbr %in% c('AK')) %>% \n  ggplot(.) + \n  geom_sf(aes(fill=data_value/100), color='white') + \n  coord_sf(crs = st_crs(3338), # Alaska Albers projection\n           xlim = c(-2400000, 1600000), # Adjust these values to zoom as needed\n           ylim = c(400000, 2500000),   # Adjust these values to zoom as needed\n           datum = NA) +\n  scale_fill_gradient2(\n    low = \"#2469b3\",\n    mid = \"#f0eee5\",\n    high = \"#b6202c\",\n    midpoint = median(df_depression$data_value/100, na.rm = TRUE)\n  ) + \n  labs(x='',\n       y='') + \n  labs() + \n  guides(fill='none', color='none') + \n  theme_minimal())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/ak_map-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(hi_map <- df_depression %>% \n  filter(data_value_type == 'Crude prevalence',\n         stateabbr %in% c('HI')) %>% \n  ggplot(.) + \n  geom_sf(aes(fill=data_value/100), color='white') + \n  coord_sf(crs = st_crs(4135), # Hawaii Albers projection\n           xlim = c(-161, -154),\n           ylim = c(18.5, 22.5),\n           datum = NA) +\n  scale_fill_gradient2(\n    low = \"#2469b3\",\n    mid = \"#f0eee5\",\n    high = \"#b6202c\",\n    midpoint = median(df_depression$data_value/100, na.rm = TRUE)\n  ) + \n  labs(x='',\n       y='') + \n  labs() + \n  guides(fill='none', color='none') + \n  theme_minimal())\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/hi_map-1.png){width=672}\n:::\n:::\n\n\n\nThen, with the `patchwork::inset_element()` function, I overlayed the Alaska and Hawaii maps to show all 50 states together, as is commonly done.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(combined_map <- lower48_map +\n  inset_element(ak_map, left = -.1, bottom = -.1, right = .3, top = .3) +\n  inset_element(hi_map, left = .1, bottom = -.1, right = 0.5, top = 0.2))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/combined_map-1.png){width=960}\n:::\n:::\n\n\n\nThis map shows some strong regional patterns of depression in the U.S., where the Pacific Northwest, the Northeast, and the Bible Belt/ Rust Belt states all show higher rates of depression among adults.\n\n# Creating the theme\n\nSince this is a mapping aesthetic that I really like, I want to create a function that I'll put into a personal package of mine. \n\nIt's very easy to create your own theme. Pro tip: the pre-set themes in R (such as `theme_minimal()`) have parameters set for dozens of aesthetic elements for graphics. If you're creating your own theme, it's likely that you won't want to set values for each of these arguments, so you can leverage another theme as your **base theme**. For this theme, I'll use `theme_minimal()` as my base theme, and use the `%+replace%` argument to modify some of the elements that I care about.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntheme_american_inequality_map <- function() {\n  theme_minimal() %+replace%\n    theme(\n      text = element_text(family = 'Roboto Condensed'),\n      plot.title = element_text(face = 'bold'), \n      plot.title.position = 'plot',\n      legend.position = \"top\",\n      legend.direction = \"horizontal\",\n      legend.key.height = unit(0.5, \"cm\"),\n      legend.key.width = unit(2, \"cm\"),\n      legend.title.position = \"top\",\n      legend.title = element_blank(),\n      legend.background = element_rect(fill = \"white\", color = NA),\n      legend.spacing.x = unit(0.2, 'cm')\n    )\n}\n```\n:::\n\n\n\nYou can then add this theme for much more concise code!\n\n# Conclusion \n\nIn this post, I wanted to update the look and feel of my U.S. county map. I've been inspired by the aesthetic used by the American Inequality project (which leverages Datawrapper for its visualization tool), and I wanted to replicate that look.\n\nThis post demonstrates how to:\n\n*  Take control of `ggplot2` and its aesthetic elements\n*  Use the `sf::` package to pull in state boundaries and apply them as a layer to a map\n*  Use `patchwork::inset_element()` to overlay plots with full control\n\nI'll be digging more into the `CDCPLACES::` data in future posts!",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}