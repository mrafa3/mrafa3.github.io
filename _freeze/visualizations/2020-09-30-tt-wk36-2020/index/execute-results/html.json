{
  "hash": "6b214b9e438832a31902bbbde6f7591f",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing agricultural data using conditionally formatted tables\"\ndescription: \"Using the {gt} package to visualize data in tables\"\nauthor:\n  - name: Mickey Rafa\n    url: https://mrafa3.github.io/\ndate: 12-30-2022\ncategories: [R, \"#TidyTuesday\", gt] # self-defined categories\nimage: \"tt_2020_36_thumbnail.png\"\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n\neditor_options: \n  chunk_output_type: inline\n  \nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n\n![Maize yield of countries in the Southern African Development Community from 2010 to 2018. This table is conditionally formatted to highlight values of higher maize yield in this subset of data. Source: Our World in Data.](tt_2020_36.png){#fig-1}\n\n\n# 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n    tidyverse,\n    tidytuesdayR,\n    dlookr,\n    ggtext,\n    countrycode,\n    gt,\n    gtExtras,  #for font awesome icons in gt tables\n    ggbump,\n    showtext,\n    janitor,   #for clean_names()\n    scales,\n    htmltools, #for tagList()\n    glue,\n    here,\n    geomtextpath\n)    \n```\n:::\n\n\n\n# 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt_year <- 2020\ntt_week <- 36\n\ntuesdata <- tidytuesdayR::tt_load(tt_year, week = tt_week)\n\nyield <- tuesdata$key_crop_yields\n```\n:::\n\n\n\n# 3. Examine the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyield %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 13,075\nColumns: 14\n$ Entity                             <chr> \"Afghanistan\", \"Afghanistan\", \"Afgh…\n$ Code                               <chr> \"AFG\", \"AFG\", \"AFG\", \"AFG\", \"AFG\", …\n$ Year                               <dbl> 1961, 1962, 1963, 1964, 1965, 1966,…\n$ `Wheat (tonnes per hectare)`       <dbl> 1.0220, 0.9735, 0.8317, 0.9510, 0.9…\n$ `Rice (tonnes per hectare)`        <dbl> 1.5190, 1.5190, 1.5190, 1.7273, 1.7…\n$ `Maize (tonnes per hectare)`       <dbl> 1.4000, 1.4000, 1.4260, 1.4257, 1.4…\n$ `Soybeans (tonnes per hectare)`    <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ `Potatoes (tonnes per hectare)`    <dbl> 8.6667, 7.6667, 8.1333, 8.6000, 8.8…\n$ `Beans (tonnes per hectare)`       <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ `Peas (tonnes per hectare)`        <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ `Cassava (tonnes per hectare)`     <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ `Barley (tonnes per hectare)`      <dbl> 1.0800, 1.0800, 1.0800, 1.0857, 1.0…\n$ `Cocoa beans (tonnes per hectare)` <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ `Bananas (tonnes per hectare)`     <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n```\n\n\n:::\n:::\n\n\n\nThe dataset contains yeild data across a variety of crop types and includes countries, territories, and regions. I want to narrow this to look at only corn yields in countries in the Southern African Development Community.\n\n# 4. Tidy the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyield <- yield %<>% \n  janitor::clean_names() %>% \n  left_join(x=.,\n            y=countrycode::codelist %>% \n              select(continent, iso3c, un.regionsub.name) %>% \n              filter(complete.cases(.)),\n            by=c('code' = 'iso3c')) %>% \n  gather(crop, yield, 4:14) %>% \n  mutate(decade = as.factor(year - (year %% 10)),\n         crop = str_to_title(str_remove(crop, \"_tonnes_per_hectare\")))\n\nsadc <- c('Angola', 'Botswana', 'Comoros', \n          'Democratic Republic of Congo', 'Swaziland', \n          'Lesotho', 'Madagascar', 'Malawi', 'Mauritius',\n          'Mozambique', 'Namibia', 'Seychelles', \n          'South Africa', 'Tanzania', 'Zambia', 'Zimbabwe')\n\nyield_df <- yield %>% \n  filter(decade == '2010',\n         entity %in% sadc) %>% \n  select(-c(decade, continent, code, un.regionsub.name)) %>% \n  spread(year, yield) %>% \n  rename(country = entity) %>%\n  filter(crop == 'Maize') %>% \n  select(-crop)\n```\n:::\n\n\n\n# 5. Visualization Parameters \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntitle_text <- md(\"**Maize Yields in the Southern African Development Community**\")\n\nsubtitle_text <- md(\"*in tons per hectare* between 2010 and 2018\")\n\nsource_text <-  md(\"**Source**: Our World In Data<br>**Inspiration**: https://themockup.blog/posts/2020-09-04-10-table-rules-in-r/\")\n```\n:::\n\n\n\n# 6. Plot \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nyield_gt <- yield_df %>% \n  gt(rowname_col = 'country') %>% \n  fmt_number(columns = 2:last_col(),\n             decimals = 1) %>% \n  sub_missing(columns = 2:last_col(),\n              missing_text = '-') %>% \n  tab_header(title = title_text,\n             subtitle = subtitle_text) %>% \n  data_color(\n    columns = 2:last_col(),\n    colors = \n      scales::col_numeric(\n        paletteer::paletteer_d(\n          palette = \"ggsci::green_material\") %>% \n          as.character(),\n        domain = NULL)) %>% \n  opt_table_font(\n    font = list(\n      google_font(\"Rubik\"),\n      default_fonts()\n    )) %>% \n  tab_source_note(source_note = source_text) %>% \n  tab_options(\n    heading.subtitle.font.size = 12,\n    heading.align = \"left\",\n    table.border.top.color = \"black\",\n    column_labels.border.bottom.color = \"black\",\n    column_labels.border.bottom.width= px(3))\n```\n:::\n\n\n\n# 7. Save \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save the plot as PNG\nyield_gt %>% \n  gtsave(\n  filename = glue(\"tt_{tt_year}_{tt_week}.png\"),\n  path = here::here()\n)\n\n# make thumbnail for page\nmagick::image_read(glue(\"tt_{tt_year}_{tt_week}.png\")) %>%\n  magick::image_resize(geometry = \"400\") %>%\n  magick::image_write(glue(\"tt_{tt_year}_{tt_week}_thumbnail.png\"))\n```\n:::\n\n\n\n# 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.0 (2024-04-24)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: America/Denver\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] geomtextpath_0.1.4 here_1.0.1         glue_1.8.0         htmltools_0.5.8.1 \n [5] scales_1.3.0       janitor_2.2.0      showtext_0.9-7     showtextdb_3.0    \n [9] sysfonts_0.8.9     ggbump_0.1.0       gtExtras_0.5.0     gt_0.11.1         \n[13] countrycode_1.6.0  ggtext_0.1.2       dlookr_0.6.3       tidytuesdayR_1.1.2\n[17] lubridate_1.9.3    forcats_1.0.0      stringr_1.5.1      dplyr_1.1.4       \n[21] purrr_1.0.2        readr_2.1.5        tidyr_1.3.1        tibble_3.2.1      \n[25] ggplot2_3.5.1      tidyverse_2.0.0    pacman_0.5.1      \n\nloaded via a namespace (and not attached):\n [1] gridExtra_2.3           httr2_1.0.5             rematch2_2.1.2         \n [4] rlang_1.1.4             magrittr_2.0.3          hrbrthemes_0.8.7       \n [7] snakecase_0.11.1        compiler_4.4.0          systemfonts_1.1.0      \n[10] vctrs_0.6.5             pkgconfig_2.0.3         crayon_1.5.3           \n[13] fastmap_1.2.0           magick_2.8.5            fontawesome_0.5.2      \n[16] utf8_1.2.4              promises_1.3.0          rmarkdown_2.28         \n[19] markdown_1.13           tzdb_0.4.0              ps_1.8.0               \n[22] bit_4.5.0               xfun_0.48               jsonlite_1.8.9         \n[25] later_1.3.2             parallel_4.4.0          R6_2.5.1               \n[28] stringi_1.8.4           pagedown_0.21           extrafontdb_1.0        \n[31] Rcpp_1.0.13             knitr_1.48              base64enc_0.1-3        \n[34] extrafont_0.19          gitcreds_0.1.2          httpuv_1.6.15          \n[37] timechange_0.3.0        tidyselect_1.2.1        rstudioapi_0.17.1      \n[40] yaml_2.3.10             websocket_1.4.2         processx_3.8.4         \n[43] curl_5.2.3              shiny_1.9.1             withr_3.0.1            \n[46] evaluate_1.0.1          xml2_1.3.6              pillar_1.9.0           \n[49] generics_0.1.3          vroom_1.6.5             rprojroot_2.0.4        \n[52] chromote_0.3.1          paletteer_1.6.0         hms_1.1.3              \n[55] munsell_0.5.1           commonmark_1.9.2        xtable_1.8-4           \n[58] gdtools_0.4.0           webshot2_0.1.1          tools_4.4.0            \n[61] reactable_0.4.4         fs_1.6.4                grid_4.4.0             \n[64] Rttf2pt1_1.3.12         gh_1.4.1                colorspace_2.1-1       \n[67] cli_3.6.3               rappdirs_0.3.3          kableExtra_1.4.0       \n[70] textshaping_0.4.0       fontBitstreamVera_0.1.1 fansi_1.0.6            \n[73] viridisLite_0.4.2       svglite_2.1.3           gtable_0.3.5           \n[76] sass_0.4.9              digest_0.6.37           fontquiver_0.2.1       \n[79] prismatic_1.1.2         htmlwidgets_1.6.4       farver_2.1.2           \n[82] lifecycle_1.0.4         mime_0.12               fontLiberation_0.1.0   \n[85] gridtext_0.1.5          bit64_4.5.2            \n```\n\n\n:::\n:::\n\n\n:::\n\n# 9. Github Repository \n\n::: {.callout-tip collapse=\"true\"}\n\n##### Expand for GitHub Repo\n \n[Access the GitHub repository here](https://github.com/mrafa3/mrafa3.github.io)\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}