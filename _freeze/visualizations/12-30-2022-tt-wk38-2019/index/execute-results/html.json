{
  "hash": "bfd4073bae7937dada2bff52de969c9a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"U.S. National Parks Visits (1904-2016)\"\ndescription: \"Evaluating changes in the popularity of U.S. National Parks over time\"\nauthor:\n  - name: Mickey Rafa\n    url: https://mrafa3.github.io/\ndate: 12-30-2022\ncategories: [R, \"#TidyTuesday\", bump-chart] # self-defined categories\nimage: \"tt_2019_38_thumbnail.png\"\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n\neditor_options: \n  chunk_output_type: inline\n  \nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n\n\n![Bump chart illustrating the ranking of U.S. National Parks over time (1904-2016) by the count of visitors. This chart highlights the top 5 national parks as of 2016, and shows their relative popularity over time.](tt_2019_38.png){#fig-1}\n\n# 1. Load Packages & Setup\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n    tidyverse,\n    tidytuesdayR,\n    dlookr,\n    ggtext,\n    gt,\n    gtExtras,  #for font awesome icons in gt tables\n    ggbump,\n    showtext,\n    janitor,   #for clean_names()\n    scales,\n    htmltools, #for tagList()\n    glue,\n    here,\n    geomtextpath\n)    \n\nfont_add('fa-brands', 'fonts/Font Awesome 6 Brands-Regular-400.otf')\n\nsysfonts::font_add_google(\"Lato\",\"lato\")\nshowtext::showtext_auto()\nshowtext::showtext_opts(dpi=300)\n```\n:::\n\n\n\n\n# 2. Read in the Data\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt_year <- 2019\ntt_week <- 38\n\ntuesdata <- tidytuesdayR::tt_load(tt_year, week = tt_week)\n\ndf <- tuesdata$national_parks\n```\n:::\n\n\n\n\n# 3. Examine the Data \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 21,560\nColumns: 12\n$ year              <chr> \"1904\", \"1941\", \"1961\", \"1935\", \"1982\", \"1919\", \"196…\n$ gnis_id           <dbl> 1163670, 1531834, 2055170, 1530459, 277263, 578853, …\n$ geometry          <chr> \"POLYGON\", \"MULTIPOLYGON\", \"MULTIPOLYGON\", \"MULTIPOL…\n$ metadata          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ number_of_records <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ parkname          <chr> \"Crater Lake\", \"Lake Roosevelt\", \"Lewis and Clark\", …\n$ region            <chr> \"PW\", \"PW\", \"PW\", \"PW\", \"PW\", \"NE\", \"IM\", \"NE\", \"IM\"…\n$ state             <chr> \"OR\", \"WA\", \"WA\", \"WA\", \"CA\", \"ME\", \"TX\", \"MD\", \"TX\"…\n$ unit_code         <chr> \"CRLA\", \"LARO\", \"LEWI\", \"OLYM\", \"SAMO\", \"ACAD\", \"AMI…\n$ unit_name         <chr> \"Crater Lake National Park\", \"Lake Roosevelt Nationa…\n$ unit_type         <chr> \"National Park\", \"National Recreation Area\", \"Nation…\n$ visitors          <dbl> 1500, 0, 69000, 2200, 468144, 64000, 448000, 738700,…\n```\n\n\n:::\n:::\n\n\n\n\nIt's important to note that there are records for sites other than U.S. National Parks, which can be identified by the `unit_type` field.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  diagnose_category() %>% \n  filter(variables == 'unit_type')\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 × 6\n   variables levels                       N  freq ratio  rank\n   <chr>     <chr>                    <int> <int> <dbl> <int>\n 1 unit_type National Monument        21560  5051 23.4      1\n 2 unit_type National Park            21560  4743 22.0      2\n 3 unit_type National Historic Site   21560  3274 15.2      3\n 4 unit_type National Historical Park 21560  1984  9.20     4\n 5 unit_type National Memorial        21560  1486  6.89     5\n 6 unit_type National Battlefield     21560   859  3.98     6\n 7 unit_type National Recreation Area 21560   806  3.74     7\n 8 unit_type National Military Park   21560   613  2.84     8\n 9 unit_type National Preserve        21560   559  2.59     9\n10 unit_type National Seashore        21560   494  2.29    10\n```\n\n\n:::\n:::\n\n\n\n\n# 4. Tidy the Data \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_annual <- df %>% \n  filter(year != 'Total',\n         unit_type == 'National Park') %>% \n  mutate(year = as.numeric(year)) %>% \n  mutate(decade = as.factor(year - (year %% 10))) %>% \n  arrange(year) %>% \n  group_by(year) %>% \n  mutate(annual_visitor_rank = as.integer(rank(-visitors))) %>% \n  select(annual_visitor_rank, year, unit_name, visitors, everything()) %>% \n  arrange(year, annual_visitor_rank) %>% \n  ungroup() %>% \n  separate(col=unit_name, into = c(\"parkname_full\", \"parktype\"), sep = \"National Park\",\n           remove=FALSE)\n\nhighlight_list_annual <- df_annual %>% \n  filter(year ==2016,\n         annual_visitor_rank <=5) %>% \n  pull(unit_name)\n\ndf_decade <- df %>% \n  filter(unit_type == 'National Park',\n         year != 'Total') %>% \n  mutate(year = as.numeric(year)) %>% \n  mutate(decade = year - (year %% 10)) %>% \n  group_by(decade, unit_name) %>% \n  summarise(visitors_by_decade = sum(visitors, na.rm = TRUE),\n            .groups = 'drop') %>% \n  group_by(decade) %>% \n  mutate(rank_visitors_by_decade = as.integer(rank(-visitors_by_decade))) %>% \n  ungroup() %>% \n  separate(col=unit_name, into = c(\"parkname_full\", \"parktype\"), sep = \"National Park\",\n           remove=FALSE)\n\ntop_1900s <- df_decade %>% filter(decade == 1900) %>% arrange(rank_visitors_by_decade) %>% head(5) %>% pull(unit_name)\n\ntop_2010s <- df_decade %>% filter(decade == 2010) %>% arrange(rank_visitors_by_decade) %>% head(5) %>% pull(unit_name)\n```\n:::\n\n\n\n\n# 5. Visualization Parameters \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_theme <- theme(\n  text = element_text(family = 'lato'), \n  plot.title = element_textbox_simple(color=\"black\", face=\"bold\", size=20, hjust=0), \n  plot.subtitle = element_textbox_simple(color=\"black\", size=12, hjust=0), \n  axis.title = element_blank(), \n  axis.text = element_blank(), \n  axis.ticks = element_blank(),\n  axis.line = element_blank(), \n  plot.caption = element_textbox_simple(color=\"black\", size=12), \n  panel.background =  element_blank(), \n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(), \n  legend.title=element_blank(), \n  legend.text = element_text(color=\"black\", size=12, hjust=0),\n  legend.position = 'top',\n  strip.text = element_text(color=\"black\", size=14))\n\ntitle <- tagList(p('Ranking of popularity of U.S. National Parks'))\n\nsubtitle <- tagList(span('*by the number of visitors annually*'))\n\ncaption <- paste0(\"<span style='font-family:lato;'>**Source**: TidyTuesday Week 38 (2019)</span><br>\",\n                \"<span style='font-family:fa-brands;'>&#xf099;</span>\",\n                 \"<span style='font-family:lato;'>@mickey.rafa</span>\",\n                 \"<span style='font-family:lato;color:white;'>....</span>\",\n                 \"<span style='font-family:fa-brands;'>&#xf09b;</span>\",\n                 \"<span style='font-family:lato;color:white;'>.</span>\",\n                 \"<span style='font-family:lato;'>mrafa3</span>\")\n\ndescription_color <- 'grey40'\n\nsubtitle_2 <- tagList(span('*by the number of visitors by decade*'))\n```\n:::\n\n\n\n\n# 6. Plot \n\nFor the first plot, I wanted to replicate the bump chart created by [FiveThirtyEight](https://fivethirtyeight.com/features/the-national-parks-have-never-been-more-popular/), which shows the ranking of U.S. national parks by annual visitors.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n(plot_viz_538 <- df_annual %>% \n  ggplot(.,\n         aes(x=year,\n             y=-annual_visitor_rank,\n             group=unit_name,\n             color=unit_name)) + \n  geom_line(color='gray80') + \n  geom_line(data=. %>% filter(unit_name %in% highlight_list_annual)) + \n  ggrepel::geom_text_repel(\n    data = df_annual %>% filter(year == 2016, unit_name %in% highlight_list_annual),\n    aes(label = paste(\"#\", annual_visitor_rank, parkname_full)),\n    nudge_x = 15,\n    size = 3,\n    direction = 'y',\n    fontface = 'bold'\n  ) + \n  labs(x='',\n       title = title,\n       subtitle = subtitle,\n       caption = caption) + \n  coord_cartesian(xlim = c(1900, 2040), ylim = c(-65, 2), expand = F) + \n  my_theme + \n  theme(legend.position = 'none'))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot_viz_538-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\nI like this high-level plot, and I think it's effective if you want to highlight individual parks (or show a top 5, as I've done), but there is plenty of noise. In the next plot, I aggregated visitors by decade, and I'm only showing parks that were in the top five in the first decade of the dataset or the last decade. This strips out the noise and shows some interesting changes in park rankings over time.\n\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n(plot_viz_decade_bump <- df_decade %>% \n  filter(unit_name %in% c(top_1900s, top_2010s),\n         decade >= 1900) %>% \n  ggplot(.,\n         aes(x=decade, \n             y=-rank_visitors_by_decade,\n             col=unit_name)) + \n  geom_point(shape = '|', stroke = 6) + \n  geom_bump(linewidth = 1) + \n  ggrepel::geom_text_repel(\n    data = df_decade %>% filter(decade == 1900, unit_name %in% top_1900s),\n    aes(label = paste('#',rank_visitors_by_decade, \" \", parkname_full, sep = \"\")),\n    #nudge_x = -1,\n    hjust = 1, \n    size = 4, \n    direction = \"y\", \n    fontface = 'bold'\n  ) + \n  ggrepel::geom_text_repel(\n    data = df_decade %>% filter(decade == 2010, unit_name %in% top_2010s),\n    aes(label = paste('#',rank_visitors_by_decade, \" \", parkname_full, sep = \"\")),\n    hjust = 0,\n    nudge_x = 1,\n    size = 4,\n    direction = \"y\", \n    fontface = 'bold'\n  ) + \n  geom_text(\n    data = df_decade %>% filter(decade == 2010, unit_name %in% c('Hot Springs National Park', 'Wind Cave National Park', 'Crater Lake National Park')),\n    aes(label = paste('#',rank_visitors_by_decade, \" \", parkname_full, sep = \"\")),\n    hjust = 0,\n    nudge_x = 1,\n    size = 4,\n    fontface = 'bold'\n  ) + \n  annotate(\n    'text',\n    x = c(1898, 2012),\n    y = c(5, 5),\n    label = c('1900s', '2010s'),\n    hjust = c(0, 1),\n    vjust = 1,\n    size = 6,\n    fontface = 'bold') + \n  coord_cartesian(xlim = c(1860, 2070), ylim = c(-45, 10), expand = F) + \n  #theme_void() + \n  my_theme + \n  theme(legend.position = 'none',\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n    text = element_text(\n      color = description_color\n    )\n  ) +\n  labs(\n    title = title,\n    subtitle = subtitle_2,\n    caption = caption\n  ))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/viz_decade_bump-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n\n\n# 7. Save \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save the plot as PNG\nggsave(\n  filename = glue(\"tt_{tt_year}_{tt_week}.png\"), \n  plot = plot_viz_538,\n  width = 10, height = 8, units = \"in\", dpi = 320\n)\n\n# make thumbnail for page\nmagick::image_read(glue(\"tt_{tt_year}_{tt_week}.png\")) %>% \n  magick::image_resize(geometry = \"400\") %>% \n  magick::image_write(glue(\"tt_{tt_year}_{tt_week}_thumbnail.png\"))\n```\n:::\n\n\n\n\n# 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.0 (2024-04-24)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: America/Denver\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] geomtextpath_0.1.4 here_1.0.1         glue_1.8.0         htmltools_0.5.8.1 \n [5] scales_1.3.0       janitor_2.2.0      showtext_0.9-7     showtextdb_3.0    \n [9] sysfonts_0.8.9     ggbump_0.1.0       gtExtras_0.5.0     gt_0.11.1         \n[13] ggtext_0.1.2       dlookr_0.6.3       tidytuesdayR_1.1.2 lubridate_1.9.3   \n[17] forcats_1.0.0      stringr_1.5.1      dplyr_1.1.4        purrr_1.0.2       \n[21] readr_2.1.5        tidyr_1.3.1        tibble_3.2.1       ggplot2_3.5.1     \n[25] tidyverse_2.0.0    pacman_0.5.1      \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1        viridisLite_0.4.2       farver_2.1.2           \n [4] fastmap_1.2.0           gh_1.4.1                pagedown_0.21          \n [7] fontquiver_0.2.1        promises_1.3.0          digest_0.6.37          \n[10] timechange_0.3.0        mime_0.12               lifecycle_1.0.4        \n[13] magrittr_2.0.3          compiler_4.4.0          rlang_1.1.4            \n[16] tools_4.4.0             utf8_1.2.4              yaml_2.3.10            \n[19] knitr_1.48              labeling_0.4.3          htmlwidgets_1.6.4      \n[22] bit_4.5.0               curl_5.2.3              xml2_1.3.6             \n[25] withr_3.0.1             grid_4.4.0              fansi_1.0.6            \n[28] gdtools_0.4.0           xtable_1.8-4            colorspace_2.1-1       \n[31] extrafontdb_1.0         paletteer_1.6.0         gitcreds_0.1.2         \n[34] cli_3.6.3               crayon_1.5.3            rmarkdown_2.28         \n[37] ragg_1.3.3              generics_0.1.3          rstudioapi_0.17.1      \n[40] tzdb_0.4.0              commonmark_1.9.2        parallel_4.4.0         \n[43] vctrs_0.6.5             jsonlite_1.8.9          fontBitstreamVera_0.1.1\n[46] hms_1.1.3               ggrepel_0.9.6           bit64_4.5.2            \n[49] magick_2.8.5            systemfonts_1.1.0       fontawesome_0.5.2      \n[52] rematch2_2.1.2          stringi_1.8.4           gtable_0.3.5           \n[55] later_1.3.2             extrafont_0.19          munsell_0.5.1          \n[58] pillar_1.9.0            rappdirs_0.3.3          reactable_0.4.4        \n[61] R6_2.5.1                httr2_1.0.5             textshaping_0.4.0      \n[64] rprojroot_2.0.4         vroom_1.6.5             evaluate_1.0.1         \n[67] shiny_1.9.1             kableExtra_1.4.0        markdown_1.13          \n[70] gridtext_0.1.5          snakecase_0.11.1        fontLiberation_0.1.0   \n[73] httpuv_1.6.15           hrbrthemes_0.8.7        Rcpp_1.0.13            \n[76] svglite_2.1.3           gridExtra_2.3           Rttf2pt1_1.3.12        \n[79] xfun_0.48               pkgconfig_2.0.3        \n```\n\n\n:::\n:::\n\n\n\n:::\n\n# 9. Github Repository \n\n::: {.callout-tip collapse=\"true\"}\n\n##### Expand for GitHub Repo\n \n[Access the GitHub repository here](https://github.com/mrafa3/mrafa3.github.io)\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}