{
  "hash": "746f5d103dbf943f8040c6b47da06fe8",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"U.S. National Parks Visits (1904-2016)\"\ndescription: \"Tidy Tuesday: Week 38, 2019\"\nauthor:\n  - name: Mickey Rafa\n    url: https://mrafa3.github.io/\ndate: 12-30-2022\ncategories: [R, \"#TidyTuesday\", bump-chart, gt, web-scraping] # self-defined categories\nimage: plot_viz_538.png\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n\neditor_options: \n  chunk_output_type: inline\n  \nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n\n# 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n    tidyverse,\n    tidytuesdayR,\n    dlookr,\n    ggtext,\n    gt,\n    gtExtras,  #for font awesome icons in gt tables\n    ggbump,\n    showtext,\n    janitor,   #for clean_names()\n    scales,\n    htmltools, #for tagList()\n    glue,\n    here,\n    geomtextpath\n)    \n\nfont_add('fa-brands', 'fonts/Font Awesome 6 Brands-Regular-400.otf')\n\nsysfonts::font_add_google(\"Lato\",\"lato\")\nshowtext::showtext_auto()\nshowtext::showtext_opts(dpi=300)\n```\n:::\n\n\n\n# 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntuesdata <- tidytuesdayR::tt_load(2019, week = 38)\n\ndf <- tuesdata$national_parks\n```\n:::\n\n\n\n# 3. Examine the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 21,560\nColumns: 12\n$ year              <chr> \"1904\", \"1941\", \"1961\", \"1935\", \"1982\", \"1919\", \"196…\n$ gnis_id           <dbl> 1163670, 1531834, 2055170, 1530459, 277263, 578853, …\n$ geometry          <chr> \"POLYGON\", \"MULTIPOLYGON\", \"MULTIPOLYGON\", \"MULTIPOL…\n$ metadata          <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ number_of_records <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1…\n$ parkname          <chr> \"Crater Lake\", \"Lake Roosevelt\", \"Lewis and Clark\", …\n$ region            <chr> \"PW\", \"PW\", \"PW\", \"PW\", \"PW\", \"NE\", \"IM\", \"NE\", \"IM\"…\n$ state             <chr> \"OR\", \"WA\", \"WA\", \"WA\", \"CA\", \"ME\", \"TX\", \"MD\", \"TX\"…\n$ unit_code         <chr> \"CRLA\", \"LARO\", \"LEWI\", \"OLYM\", \"SAMO\", \"ACAD\", \"AMI…\n$ unit_name         <chr> \"Crater Lake National Park\", \"Lake Roosevelt Nationa…\n$ unit_type         <chr> \"National Park\", \"National Recreation Area\", \"Nation…\n$ visitors          <dbl> 1500, 0, 69000, 2200, 468144, 64000, 448000, 738700,…\n```\n\n\n:::\n:::\n\n\n\n# 4. Tidy the Data \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_annual <- df %>% \n  filter(year != 'Total',\n         unit_type == 'National Park') %>% \n  mutate(year = as.numeric(year)) %>% \n  mutate(decade = as.factor(year - (year %% 10))) %>% \n  arrange(year) %>% \n  group_by(year) %>% \n  mutate(annual_visitor_rank = as.integer(rank(-visitors))) %>% \n  select(annual_visitor_rank, year, unit_name, visitors, everything()) %>% \n  arrange(year, annual_visitor_rank) %>% \n  ungroup() %>% \n  separate(col=unit_name, into = c(\"parkname_full\", \"parktype\"), sep = \"National Park\",\n           remove=FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhighlight_list_annual <- df_annual %>% \n  filter(year ==2016,\n         annual_visitor_rank <=5) %>% \n  pull(unit_name)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_decade <- df %>% \n  filter(unit_type == 'National Park',\n         year != 'Total') %>% \n  mutate(year = as.numeric(year)) %>% \n  mutate(decade = year - (year %% 10)) %>% \n  group_by(decade, unit_name, .groups=TRUE) %>% \n  summarise(visitors_by_decade = sum(visitors, na.rm = TRUE)) %>% \n  ungroup() %>% \n  group_by(decade) %>% \n  mutate(rank_visitors_by_decade = as.integer(rank(-visitors_by_decade))) %>% \n  ungroup() %>% \n  separate(col=unit_name, into = c(\"parkname_full\", \"parktype\"), sep = \"National Park\",\n           remove=FALSE)\n\ntop_1900s <- df_decade %>% filter(decade == 1900) %>% arrange(rank_visitors_by_decade) %>% head(5) %>% pull(unit_name)\n\ntop_2010s <- df_decade %>% filter(decade == 2010) %>% arrange(rank_visitors_by_decade) %>% head(5) %>% pull(unit_name)\n```\n:::\n\n\n\n# 5. Visualization Parameters \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_theme <- theme(\n  text = element_text(family = 'lato'), \n  plot.title = element_textbox_simple(color=\"black\", face=\"bold\", size=20, hjust=0), \n  plot.subtitle = element_textbox_simple(color=\"black\", size=12, hjust=0), \n  axis.title = element_blank(), \n  axis.text = element_blank(), \n  axis.ticks = element_blank(),\n  axis.line = element_blank(), \n  plot.caption = element_textbox_simple(color=\"black\", size=12), \n  panel.background =  element_blank(), \n  panel.grid.major = element_blank(),\n  panel.grid.minor = element_blank(),\n  panel.border = element_blank(), \n  legend.title=element_blank(), \n  legend.text = element_text(color=\"black\", size=12, hjust=0),\n  legend.position = 'top',\n  strip.text = element_text(color=\"black\", size=14))\n\ntitle <- tagList(p('Ranking of popularity of U.S. National Parks'))\n\nsubtitle <- tagList(span('*by the number of visitors annually*'))\n\ncaption <- paste0(\"<span style='font-family:lato;'>**Source**: TidyTuesday Week 38 (2019)</span><br>\",\n                \"<span style='font-family:fa-brands;'>&#xf099;</span>\",\n                 \"<span style='font-family:lato;'>@mickey.rafa</span>\",\n                 \"<span style='font-family:lato;color:white;'>....</span>\",\n                 \"<span style='font-family:fa-brands;'>&#xf09b;</span>\",\n                 \"<span style='font-family:lato;color:white;'>.</span>\",\n                 \"<span style='font-family:lato;'>mrafa3</span>\")\n\ncolor_palette <- viridisLite::mako(8)\ndescription_color <- 'grey40'\n\nsubtitle_3 <- tagList(span('*by the number of visitors by decade*'))\n```\n:::\n\n\n\n# 6. Plot \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n(plot_viz_538 <- df_annual %>% \n  ggplot(.,\n         aes(x=year,\n             y=-annual_visitor_rank,\n             group=unit_name,\n             color=unit_name)) + \n  geom_line(color='gray80') + \n  geom_line(data=. %>% filter(unit_name %in% highlight_list_annual)) + \n  ggrepel::geom_text_repel(\n    data = df_annual %>% filter(year == 2016, unit_name %in% highlight_list_annual),\n    aes(label = paste(\"#\", annual_visitor_rank, parkname_full)),\n    nudge_x = 15,\n    size = 3,\n    direction = 'y',\n    fontface = 'bold'\n  ) + \n  labs(x='',\n       title = title,\n       subtitle = subtitle,\n       caption = caption) + \n  coord_cartesian(xlim = c(1900, 2040), ylim = c(-65, 2), expand = F) + \n  my_theme + \n  theme(legend.position = 'none'))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/plot_viz_538-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n(plot_viz_decade_bump <- df_decade %>% \n  filter(unit_name %in% c(top_1900s, top_2010s),\n         decade >= 1900) %>% \n  ggplot(.,\n         aes(x=decade, \n             y=-rank_visitors_by_decade,\n             col=unit_name)) + \n  geom_point(shape = '|', stroke = 6) + \n  geom_bump(linewidth = 1) + \n  ggrepel::geom_text_repel(\n    data = df_decade %>% filter(decade == 1900, unit_name %in% top_1900s),\n    aes(label = paste('#',rank_visitors_by_decade, \" \", parkname_full, sep = \"\")),\n    #nudge_x = -1,\n    hjust = 1, \n    size = 4, \n    direction = \"y\", \n    fontface = 'bold'\n  ) + \n  ggrepel::geom_text_repel(\n    data = df_decade %>% filter(decade == 2010, unit_name %in% top_2010s),\n    aes(label = paste('#',rank_visitors_by_decade, \" \", parkname_full, sep = \"\")),\n    hjust = 0,\n    nudge_x = 1,\n    size = 4,\n    direction = \"y\", \n    fontface = 'bold'\n  ) + \n  geom_text(\n    data = df_decade %>% filter(decade == 2010, unit_name %in% c('Hot Springs National Park', 'Wind Cave National Park', 'Crater Lake National Park')),\n    aes(label = paste('#',rank_visitors_by_decade, \" \", parkname_full, sep = \"\")),\n    hjust = 0,\n    nudge_x = 1,\n    size = 4,\n    fontface = 'bold'\n  ) + \n  annotate(\n    'text',\n    x = c(1898, 2012),\n    y = c(5, 5),\n    label = c('1900s', '2010s'),\n    hjust = c(0, 1),\n    vjust = 1,\n    size = 6,\n    fontface = 'bold') + \n  coord_cartesian(xlim = c(1860, 2070), ylim = c(-45, 10), expand = F) + \n  #theme_void() + \n  my_theme + \n  theme(legend.position = 'none',\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n    #plot.background = element_rect(fill = color_palette[8], color = NA),\n    text = element_text(\n      color = description_color\n    )\n  ) +\n  labs(\n    title = title,\n    subtitle = subtitle_3,\n    caption = caption\n  ))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/viz_decade_bump-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\n# 2010 to present \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n(df_recent_all_types <- df %>% \n  filter(year != 'Total') %>% \n  mutate(year = as.numeric(year)) %>% \n  filter(year >= 2010,\n         !unit_type %in% c('Parkway', 'National Parkway')) %>% \n  group_by(year) %>% \n  mutate(rank_annual_visitors = as.integer(rank(-visitors))) %>% \n  arrange(year, rank_annual_visitors))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2,578 × 13\n# Groups:   year [7]\n    year gnis_id geometry     metadata   number_of_records parkname region state\n   <dbl>   <dbl> <chr>        <chr>                  <dbl> <chr>    <chr>  <chr>\n 1  2010  255952 MULTIPOLYGON http://nr…                 1 Golden … PW     CA   \n 2  2010 1018241 MULTIPOLYGON <NA>                       1 <NA>     SE     NC   \n 3  2010  882894 MULTIPOLYGON http://nr…                 1 Gateway  NE     NY   \n 4  2010  858265 MULTIPOLYGON http://nr…                 1 Lake Me… PW     NV   \n 5  2010  531835 POLYGON      http://nr…                 1 Lincoln… NC     DC   \n 6  2010 1193711 POLYGON      <NA>                       1 <NA>     NE     PA   \n 7  2010  606900 POLYGON      http://nr…                 1 Cape Cod NE     MA   \n 8  2010  531832 POLYGON      http://nr…                 1 Vietnam… NC     DC   \n 9  2010   23866 POLYGON      http://nr…                 1 Grand C… IM     AZ   \n10  2010  689020 MULTIPOLYGON http://nr…                 1 Gulf Is… SE     FL   \n# ℹ 2,568 more rows\n# ℹ 5 more variables: unit_code <chr>, unit_name <chr>, unit_type <chr>,\n#   visitors <dbl>, rank_annual_visitors <int>\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(highlight_df_recent_all_types <- df_recent_all_types %>% \n  ungroup() %>% \n  filter(rank_annual_visitors <= 6) %>% \n  distinct(unit_name) %>% \n  pull())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Golden Gate National Recreation Area\"              \n [2] \"Great Smoky Mountains National Park\"               \n [3] \"Gateway National Recreation Area\"                  \n [4] \"Lake Mead National Recreation Area\"                \n [5] \"Lincoln Memorial\"                                  \n [6] \"Delaware Water Gap National Recreation Area\"       \n [7] \"Gulf Islands National Seashore\"                    \n [8] \"Chesapeake and Ohio Canal National Historical Park\"\n [9] \"Vietnam Veterans Memorial\"                         \n[10] \"Grand Canyon National Park\"                        \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_recent_all_types %>% \n  filter(rank_annual_visitors <= 6) %>% \n  ggplot(.,\n         aes(x=year, \n             y=rank_annual_visitors,\n             col=unit_name)) + \n  geom_point(shape = '|', stroke = 6) + \n  geom_bump(size = 1) + \n  geom_text(\n    data = df_recent_all_types %>% filter(year == 2010, unit_name %in% highlight_df_recent_all_types),\n    #should string manip the labels to cut out National Park from name\n    aes(label = unit_name),\n    size = 3,\n    hjust = 1,\n    nudge_x = -0.1,\n    fontface = 'bold'\n  ) + \n  geom_text(\n    data = df_recent_all_types %>% filter(year == 2016, unit_name %in% highlight_df_recent_all_types),\n    aes(label = rank_annual_visitors),\n    hjust = 0,\n    nudge_x = 1,\n    size = 5,\n    fontface = 'bold'\n  ) +\n  annotate(\n    'text',\n    x = c(2010, 2016),\n    y = c(0.25, 0.25),\n    label = c('2010', '2016'),\n    hjust = c(0, 1),\n    vjust = 1,\n    size = 4,\n    fontface = 'bold',\n    color = description_color) +\n  scale_y_reverse(position = 'right', breaks = seq(20, 2, -2)) + \n  #scale_color_manual(values = country_colors) +\n  coord_cartesian(xlim = c(2005, 2020), ylim = c(12, 0), expand = F) + \n  #theme_void() + \n  my_theme + \n  theme(legend.position = 'none',\n        panel.grid.major.x = element_blank(),\n        panel.grid.minor.x = element_blank(),\n    #plot.background = element_rect(fill = color_palette[8], color = NA),\n    text = element_text(\n      color = description_color\n    )\n  ) +\n  labs(\n    title = 'Ranking the popularity of U.S. National Parks',\n    subtitle = 'by total visitors each decade'\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n# Scraping Deferred Maintainance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nurl <- 'https://www.nps.gov/common/uploads/sortable_dataset/infrastructure/9143F3CC-B3B8-3F78-2F70BE310E528B37/nri-DMParkFactSheettoConverttoaCSV-Copy.csv?t=1662071341782'\n\ndf_maintenance <- read_csv(url) %>% \n  clean_names() %>% \n  mutate(deferred_maintenance = as.numeric(gsub('[$,]', '', dm_r))) %>% \n  select(park_name, deferred_maintenance)\n```\n:::\n\n\n\n\n\n## Table \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_tbl <- df_annual %>% \n  group_by(unit_name) %>% \n  mutate(year_opened = min(year)) %>% \n  ungroup() %>% \n  select(year, unit_name, visitors, state, year_opened) %>% \n  filter(year %in% c(2006, 2016)) %>% \n  spread(year, visitors) %>% \n  mutate(percent_change_2006_2016 = (`2016` - `2006`)/`2006`,\n         rank_visitors_2006 = as.integer(rank(-`2006`)),\n         rank_visitors_2016 = as.integer(rank(-`2016`)),\n         rank_change_2016 = rank_visitors_2006 - rank_visitors_2016) %>% \n  select(unit_name, state, year_opened, rank_visitors_2016, visitors=`2016`, \n         percent_change_2006_2016, rank_change_2016) %>% \n  left_join(x=.,\n            y=df_maintenance,\n            by=c('unit_name' = 'park_name')) %>% \n  ungroup() %>% \n  mutate(deferred_maintenance = round(deferred_maintenance / 1000000, 0)) %>% \n  arrange(-visitors) %>% \n  slice(1:15)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmin_visitors <- df_tbl$visitors %>% min()\n\nmax_visitors <- df_tbl$visitors %>% max()\n\nvisitors_palette <- col_numeric(c(\"#e5f5e0\", \"#31a354\"), \n                             domain = c(min_visitors, max_visitors), \n                             alpha = .75)\n\nmax_deferred <- df_tbl$deferred_maintenance %>% max()\nmin_deferred <- df_tbl$deferred_maintenance %>% min()\n\ndeferred_palette <- col_numeric(c(\"#fee0d2\", \"#de2d26\"), \n                             domain = c(min_deferred, max_deferred), \n                             alpha = .75)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n(tbl_viz <- df_tbl %>% \n  gt() %>% \n  #rename columns\n  cols_label(rank_visitors_2016 = 'Rank Visitors',\n             unit_name = 'Park',\n             visitors = 'Visitors',\n             percent_change_2006_2016 = '% Change',\n             rank_change_2016 = 'Rank Change',\n             state = 'State',\n             year_opened = 'Year Opened',\n             deferred_maintenance = 'Deferred Maintenance & Repairs Est. (2021, Millions)') %>% \n  #format numeric columns\n  fmt_number(columns = c(visitors),\n             sep_mark = \",\",\n             decimals = 0) %>% \n  fmt_percent(columns = c(percent_change_2006_2016),\n              decimals = 0) %>% \n  fmt_currency(columns = c(deferred_maintenance),\n               decimals = 0) %>% \n  #add tab spanners\n  tab_spanner(\n    label = md('**2006 - 2016**'),\n    columns = c(percent_change_2006_2016, rank_change_2016)\n  ) %>% \n   tab_spanner(\n    label = md('**2016**'),\n    columns = c(rank_visitors_2016, visitors)\n  ) %>% \n  #add table title\n  tab_header(title = md(\"**Most Popular U.S. National Parks in 2016**\"),\n             subtitle = 'by estimated number of visitors') %>% \n  tab_source_note(source_note = md(\"Visitor data sourced from Tidy Tuesday Week 38 (2019)<br>Deffered Maintenance & Repairs estimates sourced from nps.gov\")) %>% \n  #apply new style to all column headers\n  tab_style(\n    locations = cells_column_labels(columns = everything()),\n    style = list(\n      #thick border\n      cell_borders(sides = \"bottom\", weight = px(3)),\n      #make text bold\n      cell_text(weight = \"bold\")\n    )\n  ) %>% \n  #apply different style to title\n  tab_style(locations = cells_title(groups = \"title\"),\n            style = list(\n              cell_text(weight = \"bold\", size = 24)\n            )) %>% \n  data_color(columns = c(visitors),\n             colors = visitors_palette) %>% \n  data_color(columns = c(deferred_maintenance),\n             colors = deferred_palette) %>% \n  opt_all_caps() %>% \n  opt_table_font(\n    font = list(\n      google_font(\"Chivo\"),\n      default_fonts()\n    )\n  ) %>% \n  tab_options(\n    #remove border between column headers and title\n    column_labels.border.top.width = px(3),\n    column_labels.border.top.color = \"transparent\",\n    #remove border around the table\n    table.border.top.color = \"transparent\",\n    table.border.bottom.color = \"transparent\",\n    #adjust font sizes and alignment\n    source_notes.font.size = 12,\n    heading.align = \"left\"\n  ))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"blqojiriim\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>@import url(\"https://fonts.googleapis.com/css2?family=Chivo:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap\");\n#blqojiriim table {\n  font-family: Chivo, system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#blqojiriim thead, #blqojiriim tbody, #blqojiriim tfoot, #blqojiriim tr, #blqojiriim td, #blqojiriim th {\n  border-style: none;\n}\n\n#blqojiriim p {\n  margin: 0;\n  padding: 0;\n}\n\n#blqojiriim .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: rgba(255, 255, 255, 0);\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: rgba(255, 255, 255, 0);\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#blqojiriim .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#blqojiriim .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#blqojiriim .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#blqojiriim .gt_heading {\n  background-color: #FFFFFF;\n  text-align: left;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#blqojiriim .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#blqojiriim .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 3px;\n  border-top-color: rgba(255, 255, 255, 0);\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#blqojiriim .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#blqojiriim .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#blqojiriim .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#blqojiriim .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#blqojiriim .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#blqojiriim .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#blqojiriim .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#blqojiriim .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#blqojiriim .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#blqojiriim .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#blqojiriim .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#blqojiriim .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 80%;\n  font-weight: bolder;\n  text-transform: uppercase;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#blqojiriim .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#blqojiriim .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#blqojiriim .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#blqojiriim .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#blqojiriim .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#blqojiriim .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#blqojiriim .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#blqojiriim .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#blqojiriim .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#blqojiriim .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#blqojiriim .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#blqojiriim .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#blqojiriim .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#blqojiriim .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#blqojiriim .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#blqojiriim .gt_sourcenote {\n  font-size: 12px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#blqojiriim .gt_left {\n  text-align: left;\n}\n\n#blqojiriim .gt_center {\n  text-align: center;\n}\n\n#blqojiriim .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#blqojiriim .gt_font_normal {\n  font-weight: normal;\n}\n\n#blqojiriim .gt_font_bold {\n  font-weight: bold;\n}\n\n#blqojiriim .gt_font_italic {\n  font-style: italic;\n}\n\n#blqojiriim .gt_super {\n  font-size: 65%;\n}\n\n#blqojiriim .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#blqojiriim .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#blqojiriim .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#blqojiriim .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#blqojiriim .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#blqojiriim .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#blqojiriim .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#blqojiriim .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#blqojiriim div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"8\" class=\"gt_heading gt_title gt_font_normal\" style=\"font-size: 24; font-weight: bold;\"><span data-qmd-base64=\"PHN0cm9uZz5Nb3N0IFBvcHVsYXIgVS5TLiBOYXRpb25hbCBQYXJrcyBpbiAyMDE2PC9zdHJvbmc+\"><span class='gt_from_md'><strong>Most Popular U.S. National Parks in 2016</strong></span></span></td>\n    </tr>\n    <tr class=\"gt_heading\">\n      <td colspan=\"8\" class=\"gt_heading gt_subtitle gt_font_normal gt_bottom_border\" style>by estimated number of visitors</td>\n    </tr>\n    <tr class=\"gt_col_headings gt_spanner_row\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"unit_name\">Park</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"2\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"state\">State</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"2\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"year_opened\">Year Opened</th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"**2016**\">\n        <div class=\"gt_column_spanner\"><span data-qmd-base64=\"PHN0cm9uZz4yMDE2PC9zdHJvbmc+\"><span class='gt_from_md'><strong>2016</strong></span></span></div>\n      </th>\n      <th class=\"gt_center gt_columns_top_border gt_column_spanner_outer\" rowspan=\"1\" colspan=\"2\" scope=\"colgroup\" id=\"**2006 - 2016**\">\n        <div class=\"gt_column_spanner\"><span data-qmd-base64=\"PHN0cm9uZz4yMDA2IC0gMjAxNjwvc3Ryb25nPg==\"><span class='gt_from_md'><strong>2006 - 2016</strong></span></span></div>\n      </th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"2\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"deferred_maintenance\">Deferred Maintenance &amp; Repairs Est. (2021, Millions)</th>\n    </tr>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"rank_visitors_2016\">Rank Visitors</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"visitors\">Visitors</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"percent_change_2006_2016\">% Change</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" style=\"border-bottom-width: 3px; border-bottom-style: solid; border-bottom-color: #000000; font-weight: bold;\" scope=\"col\" id=\"rank_change_2016\">Rank Change</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Great Smoky Mountains National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">NC</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1931</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">1</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #31A354; color: #FFFFFF;\">11,312,786</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">22%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">0</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FDBBA8; color: #000000;\">$245</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Grand Canyon National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">AZ</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1919</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">2</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #9BD09F; color: #000000;\">5,969,811</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">39%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">0</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #E44636; color: #FFFFFF;\">$940</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Yosemite National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">CA</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1906</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">3</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #ABD8AD; color: #000000;\">5,028,868</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">55%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">0</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #DE2D26; color: #FFFFFF;\">$1,042</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Rocky Mountain National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">CO</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1915</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">4</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #B3DDB4; color: #000000;\">4,517,585</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">65%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">2</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FECFBE; color: #000000;\">$118</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Zion National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">UT</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1919</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">5</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #B7DEB8; color: #000000;\">4,295,127</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">67%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">2</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FED8C9; color: #000000;\">$58</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Yellowstone National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">WY</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1904</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">6</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #B8DFB8; color: #000000;\">4,257,177</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">48%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">-2</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #E54838; color: #FFFFFF;\">$929</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Olympic National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">WA</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1935</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">7</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #C6E6C5; color: #000000;\">3,390,221</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">23%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">-2</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FEC5B3; color: #000000;\">$183</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Acadia National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">ME</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1919</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">8</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #C8E7C6; color: #000000;\">3,303,393</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">59%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">2</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FECDBB; color: #000000;\">$134</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Grand Teton National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">WY</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1929</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">9</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #C9E7C7; color: #000000;\">3,270,076</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">36%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">0</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FECAB9; color: #000000;\">$149</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Glacier National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">MT</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1911</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">10</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #CEEACC; color: #000000;\">2,946,681</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">50%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">1</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FED2C2; color: #000000;\">$99</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Joshua Tree National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">CA</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1941</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">11</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #D5EDD2; color: #000000;\">2,505,286</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">99%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">4</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FED1C1; color: #000000;\">$105</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Cuyahoga Valley National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">OH</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1978</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">12</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #D7EED3; color: #000000;\">2,423,390</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">−2%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">-4</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FEC4B2; color: #000000;\">$189</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Bryce Canyon National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">UT</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1929</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">13</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #D8EFD4; color: #000000;\">2,365,110</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">166%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">7</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FEDFD1; color: #000000;\">$14</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Hawai'i Volcanoes National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">HI</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1921</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">14</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #E0F2DB; color: #000000;\">1,887,580</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">17%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">-2</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FEC1AE; color: #000000;\">$208</td></tr>\n    <tr><td headers=\"unit_name\" class=\"gt_row gt_left\">Arches National Park</td>\n<td headers=\"state\" class=\"gt_row gt_left\">UT</td>\n<td headers=\"year_opened\" class=\"gt_row gt_right\">1929</td>\n<td headers=\"rank_visitors_2016\" class=\"gt_row gt_right\">15</td>\n<td headers=\"visitors\" class=\"gt_row gt_right\" style=\"background-color: #E5F5E0; color: #000000;\">1,585,718</td>\n<td headers=\"percent_change_2006_2016\" class=\"gt_row gt_right\">90%</td>\n<td headers=\"rank_change_2016\" class=\"gt_row gt_right\">7</td>\n<td headers=\"deferred_maintenance\" class=\"gt_row gt_right\" style=\"background-color: #FEE0D2; color: #000000;\">$8</td></tr>\n  </tbody>\n  <tfoot class=\"gt_sourcenotes\">\n    <tr>\n      <td class=\"gt_sourcenote\" colspan=\"8\"><span data-qmd-base64=\"VmlzaXRvciBkYXRhIHNvdXJjZWQgZnJvbSBUaWR5IFR1ZXNkYXkgV2VlayAzOCAoMjAxOSk8YnI+RGVmZmVyZWQgTWFpbnRlbmFuY2UgJmFtcDsgUmVwYWlycyBlc3RpbWF0ZXMgc291cmNlZCBmcm9tIG5wcy5nb3Y=\"><span class='gt_from_md'>Visitor data sourced from Tidy Tuesday Week 38 (2019)<br>Deffered Maintenance &amp; Repairs estimates sourced from nps.gov</span></span></td>\n    </tr>\n  </tfoot>\n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n\n# 7. Save \n\n# 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.0 (2024-04-24)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: America/Denver\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] geomtextpath_0.1.4 here_1.0.1         glue_1.8.0         htmltools_0.5.8.1 \n [5] scales_1.3.0       janitor_2.2.0      showtext_0.9-7     showtextdb_3.0    \n [9] sysfonts_0.8.9     ggbump_0.1.0       gtExtras_0.5.0     gt_0.11.1         \n[13] ggtext_0.1.2       dlookr_0.6.3       tidytuesdayR_1.1.2 lubridate_1.9.3   \n[17] forcats_1.0.0      stringr_1.5.1      dplyr_1.1.4        purrr_1.0.2       \n[21] readr_2.1.5        tidyr_1.3.1        tibble_3.2.1       ggplot2_3.5.1     \n[25] tidyverse_2.0.0    pacman_0.5.1      \n\nloaded via a namespace (and not attached):\n [1] tidyselect_1.2.1        viridisLite_0.4.2       farver_2.1.2           \n [4] fastmap_1.2.0           gh_1.4.1                pagedown_0.21          \n [7] fontquiver_0.2.1        promises_1.3.0          digest_0.6.37          \n[10] timechange_0.3.0        mime_0.12               lifecycle_1.0.4        \n[13] magrittr_2.0.3          compiler_4.4.0          sass_0.4.9             \n[16] rlang_1.1.4             tools_4.4.0             utf8_1.2.4             \n[19] yaml_2.3.10             knitr_1.48              labeling_0.4.3         \n[22] htmlwidgets_1.6.4       bit_4.5.0               curl_5.2.3             \n[25] xml2_1.3.6              withr_3.0.1             grid_4.4.0             \n[28] fansi_1.0.6             gdtools_0.4.0           xtable_1.8-4           \n[31] colorspace_2.1-1        extrafontdb_1.0         paletteer_1.6.0        \n[34] gitcreds_0.1.2          cli_3.6.3               crayon_1.5.3           \n[37] rmarkdown_2.28          generics_0.1.3          rstudioapi_0.17.1      \n[40] tzdb_0.4.0              commonmark_1.9.2        parallel_4.4.0         \n[43] base64enc_0.1-3         vctrs_0.6.5             jsonlite_1.8.9         \n[46] fontBitstreamVera_0.1.1 hms_1.1.3               ggrepel_0.9.6          \n[49] bit64_4.5.2             systemfonts_1.1.0       fontawesome_0.5.2      \n[52] rematch2_2.1.2          stringi_1.8.4           gtable_0.3.5           \n[55] later_1.3.2             extrafont_0.19          munsell_0.5.1          \n[58] pillar_1.9.0            rappdirs_0.3.3          reactable_0.4.4        \n[61] R6_2.5.1                httr2_1.0.5             textshaping_0.4.0      \n[64] rprojroot_2.0.4         vroom_1.6.5             evaluate_1.0.1         \n[67] shiny_1.9.1             kableExtra_1.4.0        markdown_1.13          \n[70] gridtext_0.1.5          snakecase_0.11.1        fontLiberation_0.1.0   \n[73] httpuv_1.6.15           hrbrthemes_0.8.7        Rcpp_1.0.13            \n[76] svglite_2.1.3           gridExtra_2.3           Rttf2pt1_1.3.12        \n[79] xfun_0.48               pkgconfig_2.0.3        \n```\n\n\n:::\n:::\n\n\n:::\n\n# 9. Github Repository \n\n::: {.callout-tip collapse=\"true\"}\n\n##### Expand for GitHub Repo\n \n[Access the GitHub repository here](https://github.com/mrafa3/mrafa3.github.io)\n:::",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}