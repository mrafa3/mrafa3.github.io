{
  "hash": "295d81eec05aef60a74354ea254ac64c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Visualizing Anscombe's Quartet\"\ndescription: \"Different shapes can have similar summary statistics\"\nauthor:\n  - name: Mickey Rafa\n    url: https://mrafa3.github.io/\ndate: 10-16-2020\ncategories: [R, \"#TidyTuesday\", scatter-plot] # self-defined categories\nimage: \"tt_2020_42_thumbnail.png\"\ndraft: false # setting this to `true` will prevent your post from appearing on your listing page until you're ready!\n\nformat:\n  html:\n    toc: true\n    toc-depth: 5\n    code-link: true\n    code-fold: true\n    code-tools: true\n    code-summary: \"Show code\"\n    self-contained: true\n\neditor_options: \n  chunk_output_type: inline\n  \nexecute: \n  error: false\n  message: false\n  warning: false\n  eval: true\n---\n\n\n\n![[Anscombe's Quartet](https://en.wikipedia.org/wiki/Anscombe%27s_quartet) is a statistical trap, where datasets with fundamentally different characteristics and distributions can have the same (or very similar) summary statistics. This dataset is a modern more example that shows this trap in action. The graphic above visualizes a bullseye, dinosaur, and star, which are similar in their summary statistics but are obviously quite different visually.](tt_2020_42.png){#fig-1}\n\n# 1. Load Packages & Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif (!require(\"pacman\")) install.packages(\"pacman\")\npacman::p_load(\n    tidyverse,\n    tidytuesdayR,\n    patchwork,\n    ggtext,\n    showtext,\n    janitor,   #for clean_names()\n    glue,\n    here\n)    \n\nfont_add_google('Source Code Pro')\nshowtext_auto()\n```\n:::\n\n\n\n# 2. Read in the Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntt_year <- 2020\ntt_week <- 42\n\ntuesdata <- tidytuesdayR::tt_load(tt_year, week = tt_week)\n\ndatasaurus <- tuesdata$datasaurus\n```\n:::\n\n\n\n# 3. Examine the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndatasaurus %>% \n  glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 1,846\nColumns: 3\n$ dataset <chr> \"dino\", \"dino\", \"dino\", \"dino\", \"dino\", \"dino\", \"dino\", \"dino\"…\n$ x       <dbl> 55.3846, 51.5385, 46.1538, 42.8205, 40.7692, 38.7179, 35.6410,…\n$ y       <dbl> 97.1795, 96.0256, 94.4872, 91.4103, 88.3333, 84.8718, 79.8718,…\n```\n\n\n:::\n:::\n\n\n\n# 4. Tidy the Data \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum_datasaurus <- datasaurus %>% \n  group_by(dataset) %>% \n  summarise_all(list(mean = mean, \n                     min = min, \n                     max = max,\n                     sd = sd))\n\ncolumn_names <- c('dataset', 'Mean(x)', 'Mean(y)', 'Min(x)', 'Min(y)', 'Max(x)', 'Max(y)', 'Std Dev(x)', 'Std Dev(y)')\n\nnames(sum_datasaurus) <- column_names\n\nsum_datasaurus <- sum_datasaurus %>% \n  gather(summary_statistic, value, 2:9) %>% \n  mutate(value = round(value, 2)) %>% \n  mutate(label = paste(summary_statistic, value, sep = \" = \"))\n\nsum_datasaurus$summary_statistic <- factor(sum_datasaurus$summary_statistic, \n                                           levels =  c('Std Dev(y)', 'Std Dev(x)', \n                                                       'Min(y)', 'Min(x)', \n                                                       'Max(y)', 'Max(x)', \n                                                       'Mean(y)', 'Mean(x)'))\n```\n:::\n\n\n\n# 5. Visualization Parameters \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_theme <- theme(\n  # choose font family\n  text = element_text(family = 'Source Code Pro', size=12, color='black'), \n  axis.ticks = element_blank(), \n  plot.background = element_blank(),\n  panel.background =  element_blank(), \n  legend.background = element_blank(), \n  panel.grid.major = element_line(colour = \"grey90\", linewidth = 0.5),\n  panel.grid.minor = element_line(colour = \"grey93\", linewidth = 0.5),\n  panel.border = element_blank(),\n  strip.text = element_textbox(size=rel(2), face='bold'))\n```\n:::\n\n\n\n# 6. Plot \n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfacet_datasaurus_viz <- datasaurus %>% \n  filter(dataset %in% c('dino', 'bullseye', 'star')) %>% \n  ggplot(.) + \n  geom_point(aes(x=x,\n                 y=y),\n             size=.7) + \n  facet_wrap(~dataset,\n             ncol = 1) + \n  my_theme\n\ndatasaurus_summary_stat_viz <- sum_datasaurus %>% \n  filter(dataset %in% c('dino', 'bullseye', 'star')) %>% \n  mutate(nrow = row_number()) %>% \n  ggplot(.) + \n  geom_text(aes(x=1,\n                y=-nrow,\n                label=label),\n            family=\"Source Code Pro\",\n            size=7) + \n  facet_wrap(~dataset,\n             ncol = 1) + \n  my_theme + \n  theme(panel.grid.major = element_blank(),\n        panel.grid.minor = element_blank(),\n        axis.title = element_blank(),\n        axis.text = element_blank())\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndatasaurus_viz <- datasaurus_summary_stat_viz + facet_datasaurus_viz + \n  plot_annotation(title = '**Summary statistics can mislead**',\n                  subtitle = \"The Anscombe Quartet is a statistical trap that demonstrates that summary statistics can be misleading. The visualization below shows three contemporary examples of the Anscombe Quartet problem. **Only by visualizing the data** can you understand the dramatic differences in the distribution of the data.\",\n                  caption = '**Source**: Tidy Tuesday Week 41 (2020)',\n                  theme = theme(plot.title = element_textbox(size=rel(4.5), face='bold'),\n                                plot.subtitle = element_textbox_simple(size=rel(2), lineheight=.3),\n                                plot.caption = element_textbox(size=rel(1.5)))\n                  )\n```\n:::\n\n\n\n# 7. Save \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Save the plot as PNG\nggsave(\n  filename = glue(\"tt_{tt_year}_{tt_week}.png\"),\n  plot = datasaurus_viz,\n  width = 5, height = 5, units = \"in\", dpi = 320\n)\n\n# make thumbnail for page\nmagick::image_read(glue(\"tt_{tt_year}_{tt_week}.png\")) %>%\n  magick::image_resize(geometry = \"400\") %>%\n  magick::image_write(glue(\"tt_{tt_year}_{tt_week}_thumbnail.png\"))\n```\n:::\n\n\n\n# 8. Session Info\n\n::: {.callout-tip collapse=\"true\"}\n##### Expand for Session Info\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\nR version 4.4.0 (2024-04-24)\nPlatform: aarch64-apple-darwin20\nRunning under: macOS Sonoma 14.6.1\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRblas.0.dylib \nLAPACK: /Library/Frameworks/R.framework/Versions/4.4-arm64/Resources/lib/libRlapack.dylib;  LAPACK version 3.12.0\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\ntime zone: America/Denver\ntzcode source: internal\n\nattached base packages:\n[1] stats     graphics  grDevices utils     datasets  methods   base     \n\nother attached packages:\n [1] here_1.0.1         glue_1.8.0         janitor_2.2.0      showtext_0.9-7    \n [5] showtextdb_3.0     sysfonts_0.8.9     ggtext_0.1.2       patchwork_1.3.0   \n [9] tidytuesdayR_1.1.2 lubridate_1.9.3    forcats_1.0.0      stringr_1.5.1     \n[13] dplyr_1.1.4        purrr_1.0.2        readr_2.1.5        tidyr_1.3.1       \n[17] tibble_3.2.1       ggplot2_3.5.1      tidyverse_2.0.0    pacman_0.5.1      \n\nloaded via a namespace (and not attached):\n [1] gtable_0.3.5      xfun_0.48         httr2_1.0.5       htmlwidgets_1.6.4\n [5] gh_1.4.1          tzdb_0.4.0        vctrs_0.6.5       tools_4.4.0      \n [9] generics_0.1.3    curl_5.2.3        parallel_4.4.0    fansi_1.0.6      \n[13] pkgconfig_2.0.3   lifecycle_1.0.4   compiler_4.4.0    farver_2.1.2     \n[17] textshaping_0.4.0 munsell_0.5.1     snakecase_0.11.1  htmltools_0.5.8.1\n[21] yaml_2.3.10       pillar_1.9.0      crayon_1.5.3      magick_2.8.5     \n[25] commonmark_1.9.2  tidyselect_1.2.1  digest_0.6.37     stringi_1.8.4    \n[29] labeling_0.4.3    rprojroot_2.0.4   fastmap_1.2.0     grid_4.4.0       \n[33] colorspace_2.1-1  cli_3.6.3         magrittr_2.0.3    utf8_1.2.4       \n[37] withr_3.0.1       scales_1.3.0      rappdirs_0.3.3    bit64_4.5.2      \n[41] timechange_0.3.0  rmarkdown_2.28    gitcreds_0.1.2    bit_4.5.0        \n[45] ragg_1.3.3        hms_1.1.3         evaluate_1.0.1    knitr_1.48       \n[49] markdown_1.13     rlang_1.1.4       gridtext_0.1.5    Rcpp_1.0.13      \n[53] xml2_1.3.6        rstudioapi_0.17.1 vroom_1.6.5       jsonlite_1.8.9   \n[57] R6_2.5.1          systemfonts_1.1.0\n```\n\n\n:::\n:::\n\n\n:::\n\n# 9. Github Repository \n\n::: {.callout-tip collapse=\"true\"}\n\n##### Expand for GitHub Repo\n \n[Access the GitHub repository here](https://github.com/mrafa3/mrafa3.github.io)\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}