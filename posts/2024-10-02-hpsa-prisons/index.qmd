---
title: "Analyzing Health Professional Shortage Areas in the U.S."
description: ""
author:
  - name: Mickey Rafa
    url: https://mrafa3.github.io/
    #orcid: 0000-0002-5300-3075
date: 10-02-2024
categories: [R, data-viz, mapping, tidyverse, mental-health, web-scraping] # self-defined categories
#citation: 
 # url: https://mrafa3.github.io/posts/2024-07-15-wikipedia-international-mens-soccer/ 
# image: theme_map.png
draft: true # setting this to `true` will prevent your post from appearing on your listing page until you're ready!
draft-mode: gone
code-annotations: hover
editor: 
  markdown: 
    wrap: 72
---

# Introduction

I'm a big fan of the [*American Inequality*](https://americaninequality.substack.com/) project. *American Inequality* uses data storytelling and mapping to tell important stories about patterns of social and economic inequality across the U.S., including topics like food deserts, public school funding, and climate change vulnerability. In a recent post on mental health, *American Inequality* used a data on [Mental Healthcare Professional Shortage Areas](https://data.hrsa.gov/topics/health-workforce/shortage-areas), as measured by the U.S. Health Resources and Services Administration. After reading this analysis, I wanted to explore this dataset myself.

## Purpose 

To review and understand what is measured and available in the Healthcare Professional Shortage Areas data.

## Setup

```{r libraries, include=TRUE, message=FALSE, warning=FALSE}
library(tidyverse)
library(ggtext)
library(rvest)
library(dlookr)
library(tigris)
library(biscale)
library(glue)
library(maps)
library(sf)
library(patchwork)
```

```{r theme_american_inequality_map, include=FALSE}
theme_american_inequality_map <- function() {
  theme_minimal() %+replace%
    theme(
      text = element_text(family = 'Roboto Condensed'),
      plot.title = element_textbox_simple(face = 'bold', hjust=0, size = 20), 
      plot.title.position = 'plot',
      plot.subtitle = element_textbox_simple(hjust=0, size=14), 
      legend.position = "top",
      legend.direction = "horizontal",
      legend.key.height = unit(0.5, "cm"),
      legend.key.width = unit(2, "cm"),
      legend.title.position = "top",
      legend.title = element_blank(),
      legend.background = element_rect(fill = "white", color = NA),
      legend.spacing.x = unit(0.2, 'cm')
    )
}
```

# Data 

## Healthcare Professional Shortage Areas 

```{r col_types, include=TRUE, echo=FALSE}
col_types <- cols(
  Discipline = col_factor(),
  `HHS Region` = col_factor(),
  State = col_factor(),
  `HPSA Score` = col_integer(), 
  `HPSA Type (Category)` = col_factor(),
  `HPSA Type Code` = col_factor(),
  `HPSA Sub -Type` = col_factor(),
  `HPSA Status` = col_factor(),
  `Rural Status` = col_factor(),
  `HPSA Status Code` = col_factor(),
  `HPSA Component Type` = col_factor(),
  `Designation Date` = col_date(format="%m/%d/%Y"),
  `Last Update Date` = col_date(format="%m/%d/%Y"),
  `HPSA Designation Population` = col_number(), 
  `As of Date (Close of Business Date)` = col_date(format="%Y-%m-%d"),
  `HRSA Data Warehouse Processing Date` = col_date(format="%m/%d/%Y"),
  .default = col_guess() # ... specify types for other columns as needed
)
```

```{r df_hpsa, include=TRUE}
df_hpsa <- read_csv('https://data.hrsa.gov/DataDownload/DD_Files/HPSA_DASHBOARD.csv',
                    col_types = col_types) %>% 
  janitor::clean_names() %>%
  select(-x26)

# write_csv(df_hpsa, './/data/hpsa_download.csv')
```

```{r diagnose_category, include=TRUE}
df_hpsa %>% 
  dlookr::diagnose_category()
```

I'd like to analyze the bivariate relationship between mental healthcare providers (at correctional facilities) and the inmate populations across the U.S. *Which areas have the most acute shortage of healthcare professionals working in correctional facilities?*

```{r review_mental_health_correctional, include=TRUE}
df_hpsa %>% 
  filter(discipline == 'Mental Health',
         hpsa_sub_type == 'Correctional Facility')
```

```{r mutate_clean_zip, include=TRUE, echo=FALSE}
df_hpsa <- df_hpsa %>% 
  mutate(zip_cleaned = str_extract(hpsa_facility_zip_code, "^\\d{5}"))
```

```{r zip_county_join, include=TRUE}
zctas <- zctas(year = 2020, cb = TRUE)

# Download county data
counties <- counties(year = 2020, cb = TRUE)

# Perform a spatial join between ZCTAs and counties
zcta_county <- st_join(zctas, counties)
```

```{r}
df_hpsa %>% 
  select(contains('zip'))
```


```{r df_mental_health, include=TRUE}
df_mental_health <- df_hpsa %>% 
  filter(discipline == 'Mental Health',
         hpsa_sub_type == 'Correctional Facility') %>% 
  group_by(state, county, zip_cleaned) %>% 
  summarise(count_mental_health_professionals = n(),
            avg_hpsa_score = mean(hpsa_score, na.rm = TRUE),
            sum_hpsa_designated_population = sum(hpsa_designation_population, na.rm = TRUE),
            .groups = 'drop') %>% 
  # note that there's at least one empty geometry that I'll need to evaluate
  left_join(x=.,
            y=zcta_county %>% select(NAME, STUSPS, ZCTA5CE20, geometry) %>%
              rename(county_name = NAME,
                     state_name = STUSPS,
                     zipcode = ZCTA5CE20),
            by = c('zip_cleaned' = 'zipcode'))
```


```{r map_states, include=TRUE}
# in progress
states <- map_data("state")
counties <- map_data("county")
?map_data()
```

https://cran.r-project.org/web/packages/biscale/vignettes/biscale.html

```{r fig.width=10, fig.height=6.2}
df_mental_health %>% 
  # filter(!state_name %in% c('AK', 'HI', 'PR', 'GU')) %>% 
  filter(state_name %in% c('CO')) %>% 
  ggplot(.) + 
  geom_sf(aes(fill=avg_hpsa_score, geometry=geometry)) + 
  # geom_polygon(data = counties %>% filter(region == 'colorado'),
  #              aes(x = long, y = lat, group = group),
  #              fill = NA, linewidth = 0.5, color='black') + 
  # geom_polygon(data = states %>% filter(region == 'colorado'),
  #              aes(x = long, y = lat, group = group),
  #              fill = NA, linewidth = 0.5, color='black') +
  coord_sf(datum = NA) + 
    scale_fill_gradient2(
    low = "#2469b3",
    mid = "#f0eee5",
    high = "#b6202c",
    midpoint = median(df_mental_health$avg_hpsa_score, na.rm = TRUE),
    name = ''
  ) + 
  theme_american_inequality_map()
```

## Prison populations data 

```{r df_prison_pop, include=TRUE}
df_prison_pop <- read_html('https://www.prisonpolicy.org/data/prison_pops_2019_2023_sources.html') %>% 
  html_node("table") %>%  # This selects the first table on the page
  html_table() %>% 
  head(n = -2)

names(df_prison_pop) <- c("state", "prisonpop_2019", "prisonpop_2020", "prisonpop_2021", "prisonpop_2022",
                         "prisonpop_2023", "source_2023", "source_url_2023")
```

```{r mutate_df_prison_pop, include=TRUE}
df_prison_pop <- df_prison_pop %>% 
  mutate(prisonpop_2023_derived = case_when(
                                    str_starts(prisonpop_2023, "No") ~ prisonpop_2022,
                                    TRUE ~ prisonpop_2023)
         ) %>% 
  mutate(across(c('prisonpop_2019', 'prisonpop_2020', 'prisonpop_2021', 'prisonpop_2022', 'prisonpop_2023_derived'),
                                 ~as.numeric(gsub("[^0-9.-]", "", .))))
```

```{r bop_cols, include=TRUE, echo=FALSE}
bop_cols <- c('Federal BOP' = '#228B22',
              'BOP' = '#228B22',
              'Other' = 'gray85',
              'State' = 'gray85')
```

```{r prisonpop_2023_top10, fig.width=10, fig.height=6.2}
df_prison_pop %>% 
  top_n(10, prisonpop_2023_derived) %>% 
  ggplot(.) + 
  geom_col(aes(x=prisonpop_2023_derived,
               y=reorder(state, prisonpop_2023_derived),
               fill=if_else(state == 'Federal BOP', 'Federal BOP', 'Other'))) + 
  scale_x_continuous(labels = scales::comma,
                     expand = expansion(mult = c(0, 0.05))) + 
  scale_fill_manual(values = bop_cols) + 
  ggtitle(glue("The <span style='color:#228B22'>**Federal Bureau of Prisons**</span> has a larger inmate<br>population than any state in 2023"),
          subtitle = '\n') + 
  labs(x='',
       y='',
       caption='Source: Prison Policy Initiative\nData for Texas from 2022') + 
  theme_american_inequality_map() + 
  theme(legend.position = 'none',
        axis.text = element_text(size=14))
```

```{r}
state_population <- tidycensus::get_acs(
  geography = 'state',
  variables = 'B01003_001',
  year = 2023,
  survey = 'acs1',
  geometry = FALSE
)
```

```{r warning=FALSE}
df_prison_pop %>% 
  left_join(x=.,
            y=state_population,
            by=c('state' = 'NAME')) %>% 
  ggplot(.,
         aes(x=estimate,
             y=prisonpop_2023_derived)) + 
  geom_point() + 
  geom_smooth(method='lm', se=FALSE) + 
  ggrepel::geom_text_repel(aes(label=state),
                           box.padding = .5) + 
  scale_x_continuous(labels = scales::comma) + 
  scale_y_continuous(labels = scales::comma) + 
  theme_american_inequality_map()
# note: need to distribute Federal BOP populations according to BOP facilities
```

```{r}
(df_mental_health_state <- df_mental_health %>% 
  group_by(state) %>% 
  summarise(ttl_mental_health_professionals = sum(count_mental_health_professionals, na.rm = TRUE),
            ttl_designated_population = sum(sum_hpsa_designated_population, na.rm = TRUE),
            .groups = 'drop'))
```


```{r}
df_prison_pop %>% 
  left_join(x=.,
            y=df_mental_health_state,
            by='state') %>% 
  ggplot(.,
         aes(x=prisonpop_2023_derived,
             y=ttl_mental_health_professionals)) + 
  geom_point() + 
  geom_smooth(method='lm', se=FALSE) + 
  ggrepel::geom_text_repel(aes(label = state),
                           box.padding = .5) + 
    scale_x_continuous(labels = scales::comma) + 
  scale_y_continuous(labels = scales::comma) + 
  theme_american_inequality_map()
```


# Federal Bureau of Prisons 

The Federal Bureau of Prisons has the largest population in this dataset, so I'll need to find a way to assign this population to individual states. I found the BOP inmate population by facility on the [bop.gov/ website](https://www.bop.gov/about/statistics/population_statistics.jsp#old_pops), so I've brought that in and summed the population numbers by state. I'll apply the percent from each state to the Federal BOP population and add that to the state.

```{r df_bop, include=TRUE, echo=FALSE}
string_bop_population <- r"(
ALDERSON FPC	WV	760
ALICEVILLE FCI	AL	1425
ALICEVILLE-CAMP	AL	178
ALLENWOOD LOW FCI	PA	1057
ALLENWOOD MED FCI	PA	1253
ALLENWOOD USP	PA	246
ASHLAND FCI	KY	1158
ASHLAND-CAMP	KY	166
ATLANTA FCI	GA	1880
ATWATER USP	CA	1088
ATWATER-CAMP	CA	136
BASTROP FCI	TX	1030
BASTROP-CAMP	TX	104
BEAUMONT LOW FCI-CAMP	TX	478
BEAUMONT LOW FCI	TX	1666
BEAUMONT MED FCI	TX	1577
BEAUMONT USP	TX	1380
BECKLEY FCI	WV	1592
BECKLEY-CAMP	WV	130
BENNETTSVILLE FCI	SC	1495
BENNETTSVILLE-CAMP	SC	80
BERLIN FCI	NH	885
BERLIN-CAMP	NH	80
BIG SANDY USP	KY	1169
BIG SANDY-CAMP	KY	62
BIG SPRING FCI	TX	619
BIG SPRING-CAMP	TX	109
BROOKLYN MDC	NY	1176
BRYAN FPC	TX	643
BUTNER FMC	NC	875
BUTNER LOW FCI	NC	995
BUTNER MED I FCI	NC	560
BUTNER MED II FCI	NC	1580
BUTNER-CAMP	NC	248
CANAAN USP	PA	1259
CANAAN-CAMP	PA	95
CARSWELL FMC	TX	1059
CARSWELL-CAMP	TX	137
CHICAGO MCC	IL	459
COLEMAN I USP	FL	1310
COLEMAN II USP	FL	1091
COLEMAN LOW FCI-CAMP	FL	458
COLEMAN LOW FCI	FL	1568
COLEMAN MED FCI	FL	1494
CUMBERLAND FCI	MD	781
CUMBERLAND-CAMP	MD	239
DANBURY FCI	CT	1131
DANBURY-CAMP	CT	113
DEVENS FMC	MA	1023
DEVENS-CAMP	MA	67
DULUTH FPC	MN	726
EDGEFIELD FCI	SC	1502
EDGEFIELD-CAMP	SC	398
EL RENO FCI	OK	1040
EL RENO-CAMP	OK	142
ELKTON FCI	OH	1576
ELKTON-FSL	OH	409
ENGLEWOOD FCI	CO	911
ENGLEWOOD-CAMP	CO	73
ESTILL-CAMP	SC	42
FAIRTON FCI	NJ	748
FAIRTON-CAMP	NJ	57
FLORENCE ADMAX USP	CO	355
FLORENCE FCI-CAMP	CO	328
FLORENCE FCI	CO	1094
FLORENCE HIGH USP	CO	783
FORREST CITY FCI-CAMP	AR	245
FORREST CITY FCI	AR	1611
FORREST CITY MED FCI	AR	1645
FORT DIX FCI	NJ	3768
FORT DIX-CAMP	NJ	251
FORT WORTH ADMINISTRATIVE	TX	1547
GILMER FCI	WV	1034
GILMER-CAMP	WV	51
GREENVILLE FCI	IL	1144
GREENVILLE-CAMP	IL	136
GUAYNABO MDC	PR	1138
HAZELTON FCI-FEMALE	WV	509
HAZELTON FCI	WV	1576
HAZELTON USP	WV	1314
HAZELTON-CAMP	WV	157
HERLONG FCI	CA	1456
HERLONG-CAMP	CA	79
HONOLULU FDC	HI	220
HOUSTON FDC	TX	873
JESUP FCI	GA	1040
JESUP-CAMP	GA	118
JESUP-FSL	GA	499
LA TUNA FCI	TX	637
LA TUNA-CAMP	TX	110
LEAVENWORTH FCI	KS	1547
LEAVENWORTH-CAMP	KS	151
LEE USP-CAMP	VA	73
LEE USP	VA	1270
LEWISBURG FCI	PA	708
LEWISBURG-CAMP	PA	466
LEXINGTON FMC	KY	1090
LEXINGTON-CAMP	KY	229
LOMPOC FCI	CA	885
LOMPOC II FCI-CAMP N	CA	99
LOMPOC II FCI-CAMP	CA	190
LOMPOC II FCI	CA	1752
LORETTO FCI	PA	797
LORETTO-CAMP	PA	73
LOS ANGELES MDC	CA	749
MANCHESTER FCI	KY	999
MANCHESTER-CAMP	KY	107
MARIANNA FCI	FL	958
MARIANNA-CAMP	FL	246
MARION FCI	IL	1048
MARION-CAMP	IL	195
MCCREARY USP	KY	1350
MCCREARY-CAMP	KY	103
MCDOWELL FCI	WV	1604
MCDOWELL-CAMP	WV	38
MCKEAN FCI	PA	955
MCKEAN-CAMP	PA	172
MEMPHIS FCI	TN	1102
MEMPHIS-CAMP	TN	91
MENDOTA FCI	CA	674
MENDOTA-CAMP	CA	111
MIAMI FCI-CAMP	FL	190
MIAMI FCI	FL	841
MIAMI FDC	FL	1068
MILAN FCI	MI	1598
MONTGOMERY FPC	AL	780
MORGANTOWN FPC	WV	398
OAKDALE I FCI	LA	982
OAKDALE II FCI-CAMP	LA	123
OAKDALE II FCI	LA	1058
OKLAHOMA CITY FTC	OK	1489
OTISVILLE FCI	NY	806
OTISVILLE-CAMP	NY	93
OXFORD FCI	WI	1161
PEKIN FCI	IL	1030
PEKIN-CAMP F	IL	246
PENSACOLA FPC	FL	515
PETERSBURG FCI-CAMP	VA	158
PETERSBURG FCI	VA	451
PETERSBURG MED FCI	VA	1562
PHILADELPHIA FDC	PA	861
PHOENIX FCI	AZ	989
PHOENIX-CAMP	AZ	243
POLLOCK MED FCI-CAMP	LA	169
POLLOCK MED FCI	LA	1534
POLLOCK USP	LA	1054
RAY BROOK FCI	NY	821
ROCHESTER FMC	MN	787
SAFFORD FCI	AZ	668
SAN DIEGO MCC	CA	725
SANDSTONE FCI	MN	1175
SCHUYLKILL FCI	PA	1052
SCHUYLKILL-CAMP	PA	163
SEAGOVILLE FCI	TX	1645
SEAGOVILLE-CAMP	TX	94
SEATAC FDC	WA	622
SHERIDAN FCI	OR	1321
SHERIDAN-CAMP	OR	249
SPRINGFIELD USMCFP	MO	1103
TALLADEGA FCI	AL	957
TALLADEGA-CAMP	AL	216
TALLAHASSEE FCI	FL	1178
TERMINAL ISLAND FCI	CA	939
TERRE HAUTE FCI-CAMP	IN	276
TERRE HAUTE FCI	IN	1197
TERRE HAUTE USP	IN	1353
TEXARKANA FCI	TX	1164
TEXARKANA-CAMP	TX	181
THOMSON FCI-CAMP	IL	137
THOMSON FCI	IL	1921
THREE RIVERS FCI	TX	1063
THREE RIVERS-CAMP	TX	185
TUCSON FCI	AZ	396
TUCSON USP	AZ	1003
TUCSON-CAMP	AZ	112
VICTORVILLE MED I FCI	CA	1465
VICTORVILLE MED I-CAMP	CA	230
VICTORVILLE MED II FCI	CA	1563
VICTORVILLE USP	CA	1192
WASECA FCI	MN	819
WILLIAMSBURG FCI	SC	1223
WILLIAMSBURG-CAMP	SC	84
YANKTON FPC	SD	477
YAZOO CITY LOW FCI-CAMP	MS	98
YAZOO CITY LOW FCI	MS	1377
YAZOO CITY LOW II FCI	MS	1451
YAZOO CITY MED FCI	MS	1386
)"

df_bop <- read_delim(string_bop_population, delim = "\t", col_names = FALSE)

colnames(df_bop) <- c("facility_name", "state", "prisonpop_bop")

df_bop_grp <- df_bop %>%
  group_by(state) %>% 
  summarise(prisonpop_bop = sum(prisonpop_bop),
            .groups = 'drop') %>% 
  mutate(perc_total_bop = prisonpop_bop / sum(prisonpop_bop))
```

```{r}
states <- data.frame(
  abbreviation = state.abb,
  state_name = state.name,
  stringsAsFactors = FALSE
)

df_bop_grp <- df_bop_grp %>%
  left_join(x=.,
            y=states,
            by=c('state' = 'abbreviation')) %>% 
  mutate(state_name = if_else(state == 'PR', 'Puerto Rico', state_name))
```

```{r}
states_map <- map_data("state")
```


```{r df_prisonpop2, include=TRUE, echo=FALSE}
df_prison_bop <- df_prison_pop %>% 
  left_join(x=.,
            y=df_bop_grp %>% select(state_name, prisonpop_bop, perc_total_bop),
            by=c('state' = 'state_name')) %>% 
  mutate(prisonpop_2023_incl_bop = prisonpop_2023_derived + prisonpop_bop)

df_prison_bop %>% 
  top_n(10, prisonpop_2023_incl_bop) %>% 
  select(state, prisonpop_bop,prisonpop_2023_derived) %>% 
  pivot_longer(prisonpop_bop:prisonpop_2023_derived, names_to = 'state_or_bop', values_to = 'values') %>% 
  mutate(state_or_bop = case_when(
    state_or_bop == 'prisonpop_bop' ~ "BOP",
    state_or_bop == 'prisonpop_2023_derived' ~ "State")
    ) %>% 
  ggplot(.) + 
  geom_col(aes(x=values,
               y=reorder(state, values),
               # y=state,
               # y=reorder(state, df_prison_bop %>% top_n(10, prisonpop_2023_incl_bop) %>% arrange(-prisonpop_2023_incl_bop) %>% pull(prisonpop_2023_incl_bop)),
               fill=state_or_bop)) + 
  scale_x_continuous(labels = scales::comma,
                     expand = expansion(mult = c(0, 0.05))) + 
  scale_fill_manual(values = bop_cols) + 
  # ggtitle(glue("The <span style='color:#228B22'>**Federal Bureau of Prisons**</span> has a larger inmate<br>population than any state in 2023"),
  #         subtitle = '\n') + 
  labs(x='',
       y='',
       caption='Source: Prison Policy Initiative\nData for Texas from 2022') +  
  ggtitle('Top 10 prison populations by state in 2023',
          subtitle=glue("Populations within facilities operated by the <span style='color:#228B22'>**Federal Bureau of Prisons**</span>")) + 
  theme_american_inequality_map() + 
  theme(legend.position = 'none',
        axis.text = element_text(size=14))
```

```{r}
df_hpsa %>% 
  glimpse()
```

```{r diagnose_hpsa, include=TRUE}
df_hpsa %>% 
  diagnose()
```

## Exploratory Data Analysis



```{r}
df_mental_health %>% 
  ggplot(.,
         aes(x=count_mental_health_professionals,
             y=sum_hpsa_designated_population)) + 
  geom_point() + 
  scale_x_continuous(breaks = scales::pretty_breaks()) + 
  scale_y_continuous(breaks = scales::pretty_breaks(),
                     labels = scales::comma) + 
  theme_american_inequality_map()
```


# Sandbox

## Zip code analysis 





# Conclusion 


This post demonstrates how to:

*  Take control of `ggplot2` and its aesthetic elements
*  Use the `sf::` package to pull in state boundaries and apply them as a layer to a map
*  Use `patchwork::inset_element()` to overlay plots with full control
