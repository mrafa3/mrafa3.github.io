---
title: "The 2024 NFL Season in 10 Graphs"
description: ""
author:
  - name: Mickey Rafa
    url: https://mrafa3.github.io/
date: 12-04-2024
categories: [R, data-viz, sports] # self-defined categories
# image: theme_map.png
draft: true # setting this to `true` will prevent your post from appearing on your listing page until you're ready!
code-annotations: hover
format:
  html:
    toc: true
    number-sections: true
    code-fold: true
    code-summary: "Show the code"
    warning: false
    message: false
editor: 
  markdown: 
    wrap: 72
fig-cap-location: margin
title-block-banner: "#f0f3f5"
title-block-banner-color: "black"
---

```{r setup, include=TRUE, warning=FALSE, message=FALSE}
#| echo=FALSE
if (!require("pacman")) install.packages("pacman")
pacman::p_load(
    tidyverse,
    nflverse,
    plotly,
    gt,
    gtExtras,
    gtUtils,
    ggfx,
    ggforce,
    rvest,
    httr,
    jsonlite,
    patchwork,
    ggtext,
    ggrepel,
    ggimage,
    dlookr,
    lubridate,
    showtext,
    sysfonts,
    janitor,
    grid,
    ggiraph,
    glue,
    here
)    

sysfonts::font_add_google("Lexend")
showtext::showtext_auto()
```

```{r nfl_analytics_theme, include=TRUE}
#| echo=FALSE
theme_nfl_analytics <- function(..., base_size = 12) {
  theme(
    text = element_text(family = "Lexend", size = base_size, color = "black"),
    axis.ticks = element_blank(),
    axis.title = element_text(face = "bold"),
    axis.text = element_text(face = "bold"),
    plot.title.position = "plot",
    plot.title = element_textbox_simple(size = 16, vjust = .02, hjust = 0.5, face='bold'),
    plot.subtitle = element_textbox(hjust = 0.5, lineheight = .4),
    plot.caption = element_textbox(size = 8),
    panel.grid.minor = element_blank(),
    panel.grid.major =  element_line(color = "#d0d0d0"),
    panel.background = element_rect(fill = "#f7f7f7"),
    plot.background = element_rect(fill = "#f7f7f7"),
    panel.border = element_blank(),
    legend.background = element_rect(color = "#F7F7F7"),
    legend.key = element_rect(color = "#F7F7F7"),
    legend.title = element_text(face = "bold", hjust = .5),
    strip.text = element_text(face = "bold"))
}
```

```{r teams, include=TRUE, message=FALSE}
#| echo=FALSE
teams <- load_teams(current = TRUE)
```

```{r make_2024_df, include=TRUE}
#| echo=FALSE
pbp_2024 <- load_pbp(seasons = 2024)
pbp_2024_reg <- pbp_2024 %>% filter(season_type == 'REG')
ftn_2024 <- load_ftn_charting(seasons = 2024)

pbp_2024_reg <- pbp_2024_reg %>% 
  left_join(x=.,
            y=ftn_2024,
            by=c('game_id' = 'nflverse_game_id',
                 'play_id' = 'nflverse_play_id',
                 'season',
                 'week'))
```

```{r params, include=TRUE}
#| echo=FALSE
max_week_param <- pbp_2024_reg %>% 
  summarise(max(week)) %>% 
  pull()
```

# Rookie QBs: performance and inconsistency

A major storyline of the 2024 season started with the NFL Draft, when six quarterbacks were selected in the first 12 picks. Four of those QBs saw significant snaps during the season: Caleb Williams (Chicago, Pick #1), Jayden Daniels (Washington, Pick #2), Drake Maye (New England, Pick #3), and Bo Nix (Denver, Pick #12).

:::  column-margin
Six QBs selected in the first round ties the record set in the 1983 draft -- the draft that included John Elway, Jim Kelly, and Dan Marino.
:::

Jayden Daniels' had the best campaign of this rookie class and among the best seasons among all passers. Daniels finished fourth in total quarterback rating (QBR) and in total expected points added (EPA), the two primary composite metrics used to evaluate quarterback play. And not only that, Daniels led the Commanders to a surprising NFC title birth in his rookie season.

While this story could have centered on Jayden Daniels' successful year, or the volume of snaps played by this rookie class, the *inconsistency* of play stands out. Aside from Daniels' remarkable season, the other rookie first round QBs turned in a combined record of 19-30 in games that they started in. The below graphic shows the weekly EPA per dropback of the four first rounders with significant playing time, highlighting the performance of Daniels and Bo Nix, who each led their teams to the playoffs.

```{r rookie_qb_epa_weekly_2024, include=TRUE}
#| echo=FALSE
rookie_qb_epa_weekly_2024 <- pbp_2024_reg %>% 
  filter(passer %in% c('J.Daniels', 'C.Williams', 'B.Nix', 'D.Maye')) %>% 
  group_by(game_id, week, posteam, passer, passer_id) %>% 
  summarise(across(
    c('qb_epa', 'pass_attempt', 'air_epa', 'yac_epa'),
    list(
        mean = ~round(mean(., na.rm = TRUE), 2),
        sum = ~round(sum(., na.rm = TRUE), 2)
      ),
      .names = "{.fn}_{.col}"
    ),
    .groups = 'drop') %>% 
  filter(sum_pass_attempt >= 10)


rookie_qp_epa_season_2024 <- pbp_2024_reg %>% 
  filter(passer %in% c('J.Daniels', 'C.Williams', 'B.Nix', 'D.Maye')) %>% 
  group_by(posteam, passer, passer_id) %>% 
  summarise(across(
    c('qb_epa', 'pass_attempt', 'air_epa', 'yac_epa'),
    list(
        mean = ~round(mean(., na.rm = TRUE), 2),
        sum = ~round(sum(., na.rm = TRUE), 2)
      ),
      .names = "{.fn}_{.col}"
    ),
    .groups = 'drop')
```

```{r last_week_rookie_qb, include=TRUE}
last_week_rookie_qb <- rookie_qb_epa_weekly_2024 %>%
  group_by(passer) %>%
  slice_max(week, n = 1)
```


```{r plot_rookie_qb_epa, include=TRUE, fig.width=9}
rookie_qb_epa_weekly_2024 %>% 
  ggplot(.,
         aes(x=week,
             y=mean_qb_epa,
             color=posteam,
             alpha=if_else(passer %in% c('C.Williams','D.Maye'), 'Not playoffs', 'Playoffs'))) + 
  geom_line(linewidth=1.2) + 
  geom_point(data=last_week_rookie_qb,
             size=3) + 
  geom_text(data=last_week_rookie_qb,
            aes(x=week + 1,
                label=passer),
            family='Lexend') + 
  geom_hline(yintercept = 0, color='black', linetype='dashed') + 
  labs(title='EPA per dropback of 1st round rookies in 2024',
       # subtitle = glue('Through Week {max_week_param}'),
       caption = 'Source: {nflverse} package<br>Minimum 10 attempts to qualify as a full game',
       x='Week',
       y='EPA/dropback') + 
  scale_alpha_manual(values = c('Not playoffs' = .3,
                                'Playoffs' = 1)) + 
  theme_nfl_analytics() +
  scale_color_nfl(type='secondary') + 
  theme(legend.position = 'none')
  # theme(axis.title.y = element_text(angle=0))
```

# Aaron Rodgers {.tabset}

```{r passing_data, include=TRUE}
#| echo=FALSE
player_stats_99_24 <- load_player_stats(seasons = TRUE,
                                       stat_type = 'offense')

season_qbr_06_24 <- nflreadr::load_espn_qbr(seasons = TRUE,
                        summary_type = 'season')
```

```{r rodgers_season_qbr, include=FALSE, fig.width=9}
#| title: Rodgers' QBR by season, compared to the league average
season_qbr_06_24 %>% 
  filter(name_short == 'A. Rodgers',
         season_type == 'Regular') %>% 
  ggplot(.,
         aes(x=season,
             y=qbr_total)) + 
  geom_line() + 
  geom_smooth(se=FALSE) + 
  geom_median_lines(data = season_qbr_06_24 %>% filter(qualified == TRUE,
                                                       season_type == 'Regular'),
                    aes(y0 = qbr_total)) + 
  scale_y_continuous(breaks = scales::pretty_breaks()) + 
  scale_x_continuous(breaks = scales::pretty_breaks()) + 
  theme_nfl_analytics()
```

```{r dropback_pbp_08_24, include=TRUE}
#| echo=FALSE
dropback_pbp_08_24 <- load_pbp(seasons = c(2008:2024)) %>% 
  filter(season_type == 'REG',
         !is.na(passer)) %>% 
  group_by(season, passer, posteam) %>% 
  summarise(plays = n(),
            interceptions = sum(interception, na.rm = TRUE),
            sum_qb_epa = sum(qb_epa, na.rm = TRUE),
            sum_air_epa = sum(air_epa, na.rm = TRUE),
            sum_yac_epa = sum(yac_epa, na.rm = TRUE),
            sum_qb_epa_int = sum(qb_epa[interception == 1], na.rm = TRUE),
            sum_qb_epa_sack = sum(qb_epa[sack == 1], na.rm = TRUE),
            sum_qb_epa_dpi = sum(qb_epa[penalty_type == 'Defensive Pass Interference'], na.rm = TRUE),
            sum_qb_epa_scramble = sum(qb_epa[qb_scramble == 1], na.rm = TRUE),
            .groups = 'drop') %>% 
  filter(plays >= 150) %>% 
  mutate(
    across(
      starts_with("sum"),
      list(
        mean_centered = ~. - mean(., na.rm = TRUE)
      ),
      .names = "{.fn}_{.col}"
    ))
```

```{r rodgers_gt, include=TRUE}
#| title: Rodgers' 2
dropback_pbp_08_24 %>% 
  filter(passer == 'A.Rodgers',
         season != 2023) %>% 
  left_join(x=.,
            y=teams %>% select(team_abbr, team_logo_wikipedia),
            by=c('posteam' = 'team_abbr')) %>% 
  select(season, team_logo_wikipedia, plays, contains('mean_centered')) %>% 
  arrange(-season) %>% 
  gt() %>% 
  cols_label(season = 'Season',
             team_logo_wikipedia = 'Team',
             plays = 'Plays',
             mean_centered_sum_qb_epa = 'EPA',
             mean_centered_sum_air_epa = 'Air',
             mean_centered_sum_yac_epa = 'YAC',
             mean_centered_sum_qb_epa_int = 'INTs',
             mean_centered_sum_qb_epa_sack = 'Sacks',
             mean_centered_sum_qb_epa_dpi = 'DPI',
             mean_centered_sum_qb_epa_scramble = 'Scramble') %>% 
  gt_color_pills(mean_centered_sum_qb_epa, digits = 3,
                 domain = c(-230, 230)) %>% 
  gt_color_pills(mean_centered_sum_air_epa, digits = 3,
                 domain = c(-300, 300)) %>% 
  gt_color_pills(mean_centered_sum_yac_epa, digits = 3,
                 domain = c(-240, 240)) %>% 
  gt_color_pills(mean_centered_sum_qb_epa_int, digits = 3,
                 domain = c(-110, 110)) %>% 
  gt_color_pills(mean_centered_sum_qb_epa_sack, digits = 3,
                 domain = c(-60, 60)) %>% 
  gt_color_pills(mean_centered_sum_qb_epa_dpi, digits = 3,
                 domain = c(-30, 30)) %>% 
  gt_color_pills(mean_centered_sum_qb_epa_scramble, digits = 3,
                 domain = c(-50, 50)) %>% 
  tab_header(title = md("**Aaron Rodgers** career EPA data by season"),
             subtitle = md("*Centering EPA categories on the league average to assess how Rodgers has succeeded historically*<br>Highlighting 2014, 2020, and 2021 as his MVP seasons")) %>% 
  tab_source_note(source_note = md("**Source**: {nflverse}<br>Minimum 150 snaps in a season for QBs to qualify<br>Excluding 2023 as injury-shortened season")) %>% 
  tab_style(
    style = list(
      cell_fill(color = "#FFB612"),
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      rows = season %in% c(2014, 2020, 2021)
    )
  ) %>% 
  tab_spanner(
    label = md("**Mean Centered**<br>Positive values indicate performance above league average in that season"),    
    columns = c(mean_centered_sum_qb_epa:mean_centered_sum_qb_epa_scramble)
  ) %>% 
  gt_img_rows(
    columns = team_logo_wikipedia,
    height = 30
  ) %>% 
  gt_theme_athletic()
```

So what is clearly *not* working this year? Well, lots of things -- the Jets are a mess. But throughout Rodgers' career, two things stand out:

::: column-margin
Mean centering is a way to contextualize EPA relative to league-wide performance. Values close to zero indicate that performance in that category is near the league average; strong positive values indicate categories where Rodgers led the league in that category in that season.
:::

-   **Air EPA** was a strength of his game. He could push the ball down the field and add value to his team by completing passes that improve his team's expected points. Only in 2013 and 2017 -- both injury-shortened seasons -- did Rodgers post air EPA numbers below the league average. In 2024, his offense is more reliant on yards after the catch than in most of his career.
-   Rodgers has always posted above average EPA from **scrambles**, and this is the first season where that doesn't hold true. Whether it's the injury or just a reluctance to run, Rodgers is simply more stationary and less effective at scrambling at this stage in his career.

We haven't seen peak Aaron Rodgers since the 2021 season -- the year that he earned his third league MVP. Which team will take a chance on him in 2025?

# "Passing is down league-wide..."

...or is it?

```{r ttl_passing_stats_99_24, include=TRUE}
#| echo=FALSE
ttl_passing_stats_99_24 <- player_stats_99_24 %>% 
  filter(season_type == 'REG') %>% 
  group_by(season, week, recent_team) %>% 
  summarise(ttl_passing_yards = sum(passing_yards, na.rm = TRUE),
            .groups = 'drop') %>% 
  group_by(season, recent_team) %>%
  summarise(passing_yards_per_game = mean(ttl_passing_yards, na.rm = TRUE),
            .groups = 'drop') %>% 
  mutate(percentile_rank = percent_rank(passing_yards_per_game) * 100) %>% 
  arrange(-season, passing_yards_per_game)

top_2024_passing_team <- ttl_passing_stats_99_24 %>% 
  filter(season == 2024) %>% 
  slice_max(passing_yards_per_game) %>% 
  pull(passing_yards_per_game) %>% 
  round()

top_2024_passing_team_percentile <- ttl_passing_stats_99_24 %>% 
  filter(season == 2024) %>% 
  slice_max(passing_yards_per_game) %>% 
  pull(percentile_rank) %>% 
  round()
```

Early in the season, there was a lot of discussion about how passing was down across the league. Defenses were deploying more cover 2 shell looks in an attempt to "keep a lid" on offenses.

What we saw in the 2024 season was a "higher floor, lower cieling" league as far as passing goes. **Only one team in 2024 averaged less than 200 yards passing (Patriots), while no teams average above 300.**

Note: I would love to do some analysis on defensive looks and give a more critical evaluation of this theme, but coverages (and personnel groupings) don't seem to be available in public NFL sources.

Joe Burrow and the Bengals were *cooking* on offense in 2024. They are averaged `r top_2024_passing_team` yards per game, which would rank in the `r top_2024_passing_team_percentile`nd percentile in the last 25 years.

::: column-margin
Only 3 offenses -- the Bengals, Lions, and Buccaneers -- had a passing attack that would rank in the top quartile from the last 25 seasons.
:::

```{r passing_yards_season_average, include=TRUE}
passing_yards_season_average <- player_stats_99_24 %>% 
  filter(season_type == 'REG') %>% 
  group_by(season, week, recent_team) %>% 
  summarise(ttl_passing_yards = sum(passing_yards, na.rm = TRUE),
            .groups = 'drop') %>% 
  group_by(season, recent_team) %>%
  summarise(passing_yards_per_game = mean(ttl_passing_yards, na.rm = TRUE),
            .groups = 'drop') 
```


```{r season_passing_league_jitter, fig.width=9}
passing_yards_season_average %>% 
  ggplot(.,
         aes(x=passing_yards_per_game,
             y=season)) + 
  geom_jitter(width=0, height=.1, alpha=.4) + 
  geom_segment(data = . %>% 
                 group_by(season) %>% 
                 summarise(mean_yards = mean(passing_yards_per_game)),
               aes(x = mean_yards, xend = mean_yards,
                   y = season - 0.6, yend = season + 0.6),
               color = "red", linetype = "solid", linewidth = 1.2) +
  labs(title = 'Distribution of passing yards per game on a seasonal basis (1999-2024)',
       subtitle = "Each dot represents a team's average total passing from a season<br>Red lines mark the league-wide average for a season",
       y='Season',
       x='Average pass yards per game',
       caption = '**Source**: {nflverse}') + 
  scale_y_continuous(breaks = scales::pretty_breaks()) + 
  scale_x_continuous(breaks = scales::pretty_breaks()) + 
  theme_nfl_analytics() + 
  theme(axis.title.y = element_text(angle = 0))
```

```{r season_passing_league_column, fig.width=9, include=FALSE}
passing_yards_season_average %>% 
  mutate(season_highlight = if_else(season == 2024, '2024', 'Other')) %>% 
  ggplot(.,
         # aes(x=reorder(paste(season, recent_team, sep = ", "), passing_yards_per_game),
         #     y=passing_yards_per_game,
         #     fill=if_else(season == 2024, '2024', 'Other'))) + 
         aes(x=passing_yards_per_game,
             fill=season_highlight,
             color=season_highlight)) + 
  # geom_col() + 
  geom_density(position='identity', alpha=.1) + 
  # geom_mean_lines(aes(x0=passing_yards_season_average)) + 
  # geom_vline(data=. %>% group_by(season_highlight) %>% summarise(mean_yards_per_game = mean(passing_yards_season_average)))
  scale_fill_manual(values = c('2024' = 'red',
                               'Other' = 'gray10')) +
  scale_color_manual(values = c('2024' = 'red',
                               'Other' = 'gray10')) +
  theme_nfl_analytics() + 
  theme(legend.position = 'none')
```

# Offensive balance and team success

From the 2024 season, teams that have a balanced, productive offensive attack tend to be more successful. Of the eleven teams that had positive EPA/play results in the regular season in rushing **and** passing, eight of them made the playoffs, including **six** of the divisional winners.

```{r 2024_post_teams, include=TRUE}
post_teams <- pbp_2024 %>% 
  filter(season_type == 'POST') %>% 
  select(home_team, away_team) %>% 
  distinct() %>% 
  pivot_longer(cols = home_team:away_team, names_to = "team") %>% 
  distinct(value) %>% 
  pull()
```

```{r rush_pass_epa, include=TRUE, fig.width=9}
pbp_2024_reg %>% 
  filter(play_type %in% c('run', 'pass')) %>% 
  group_by(posteam, play_type) %>% 
  summarise(epa_per_play = mean(epa, na.rm = TRUE),
            .groups = 'drop') %>% 
  pivot_wider(names_from = play_type, values_from = epa_per_play) %>% 
  mutate(postseason_team = if_else(posteam %in% post_teams, 1, 0)) %>% 
  ggplot(.,
         aes(x=run,
             y=pass,
             alpha=postseason_team)) + 
  geom_mean_lines(aes(x0=0,
                      y0=0),
                  color='black', linewidth=.8, linetype='dashed') + 
  geom_nfl_logos(aes(team_abbr = posteam), width = 0.09) +
  scale_y_continuous(breaks = scales::pretty_breaks()) + 
  scale_x_continuous(breaks = scales::pretty_breaks()) + 
  labs(
    title = '**Expected Points Added per Play**: Rush Offense vs. Pass Offense',
    subtitle = glue::glue('2024 season, postseason teams highlighted'),
    x = "Rush EPA/play",
    y = "Pass EPA/play"
    ) +
  # scale_alpha_manual(values = c(0 = .25,
  #                               1 = 1)) + 
  theme_nfl_analytics() + 
  theme(legend.position = 'none')
```

# Cameron Heyward: Getting Better with Age

Coming off a down 2023 season, where he had surgery on an injured groin, Cam Heyward signed an extension with Pittsburgh that would (effectively) allow him to end his career with the Steelers. Entering the 2024 season at age 35, there were questions about whether Cam Heyward had anything left in the tank. 

He answered those questions with a **dominant** 2024 season, making his presence felt in big moments and earning All-Pro honors. His 2024 season should also be seen through a historical lense -- interior defensive lineman simply do not perform at this level and at this age.

```{r calc_age, include=TRUE, warning=FALSE, message=FALSE}
#| echo=FALSE
# thanks to Open Source Football for this code and concept

calc_age <- function(birthDate, refDate = Sys.Date(), unit = "year") {
  
  # require(lubridate)
  
  if(grepl(x = unit, pattern = "year")) {
    as.period(interval(birthDate, refDate), unit = 'year')$year
  } else if(grepl(x = unit, pattern = "month")) {
    as.period(interval(birthDate, refDate), unit = 'month')$month
  } else if(grepl(x = unit, pattern = "week")) {
    floor(as.period(interval(birthDate, refDate), unit = 'day')$day / 7)
  } else if(grepl(x = unit, pattern = "day")) {
    as.period(interval(birthDate, refDate), unit = 'day')$day
  } else {
    print("Argument 'unit' must be one of 'year', 'month', 'week', or 'day'")
    NA
  }
  
}

# loop to get 1999 to 2024 rosters
rosters <- data.frame()

for (x in 1999:2024) {
  df <- nflfastR::fast_scraper_roster(x) %>%
    # mutate(birth_date = as.Date(birth_date)) %>%
    select(
      position,
      birth_date,
      gsis_id,
      season,
      years_exp,
      full_name,
      team
    ) %>%
    mutate(age_season_start = calc_age(birth_date, paste0(x,"-09-01")))
  rosters <- rbind(df, rosters)
}
```

```{r gt_dt_over_35, include=TRUE}
player_stats_def_99_24 <- load_player_stats(seasons = TRUE,
                  stat_type = 'defense') %>% 
  filter(season_type == 'REG')

def_ranks <- player_stats_def_99_24 %>% 
  group_by(season, team, player_id, player_display_name, position, position_group) %>% 
  summarise(across(starts_with('def'),
                   list(
                     sum = ~sum(., na.rm = TRUE)
                   ),
                   .names = '{.fn}_{.col}'
                   ),
            distinct_weeks = n_distinct(week),
            .groups = 'drop'
            )
  
def_ranks %>% 
  left_join(x=.,
            y=rosters,
            by=c('player_id' = 'gsis_id',
                 'season',
                 'team')) %>% 
  filter(age_season_start >= 35,
         # position_group == 'DL') %>% 
         position.x == 'DT') %>%
  arrange(-sum_def_sacks, -sum_def_tackles) %>% 
  select(season, team, player_display_name, position.x, sum_def_sacks, sum_def_tackles,
         sum_def_tackles_for_loss, sum_def_qb_hits, sum_def_pass_defended) %>% 
  slice(1:10) %>% 
  gt() %>% 
  cols_label(team = '',
             season = 'Season',
             player_display_name = 'Name',
             # position.x = 'Position',
             sum_def_sacks = 'Sacks',
             sum_def_tackles = 'Tackles',
             sum_def_tackles_for_loss = 'TFLs',
             sum_def_qb_hits = 'QB Hits',
             sum_def_pass_defended = 'Passes Defensed') %>% 
  tab_header(
    title = md(glue("Cameron Heyward's Historic 2024 Campaign")),
    subtitle = md('Heyward is the only DT over 35 to be named All-Pro<br>Defensive Tackles over 35 y.o., ranking the top 10 seasons by sack totals (1999-2024)')
    ) %>%
  nflplotR::gt_nfl_logos(columns = "team") %>% 
  gt_merge_stack(col1 = player_display_name, col2 = position.x) %>%
  tab_style(
    style = list(
      cell_fill(color = "gold"),
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      rows = player_display_name == 'Cameron Heyward'
    )
  ) %>% 
  gt_color_rows(columns = sum_def_sacks:sum_def_pass_defended, palette = "Blues") %>% 
  tab_source_note(source_note = md("**Source**: {nflverse}")) %>% 
  # nflplotR::gt_nfl_headshots(columns = 'player_id', height = 60)
  gt_theme_538()
```

In the last 25 years, no defensive tackle over 35 years old has been this dominant. Among seasons where a defensive tackle began the season at least 35 years old, Heyward's 2024 season ranks first in sacks, tackles for loss, QB hits, tipped passes, and tackles. He's not just winning in a narrow or "crafty" way, he's dominating across statistical categories.

::: column-margin
This story led me to looking at John Randle's career stats. He was more of a pass-rusher than an all-around player, but **damn** was he good.

I wanted to layer in data on snap counts to see how his utilization compares with others in this category, but the {nflverse} snap count data only goes back to 2012.
:::

There are only 14 defensive tackles in the last 25 years that have **even played** past the age of 35. For Cam Heyward to be playing at such a high level is without precedent. 

Hall of Fame defensive tackle John Randle (played from 1990-2003) is the closest historical comparison to Heyward's 2024 season. Randle recorded 5.5 sacks in his final season (as a 35 year old), and his last Pro Bowl was two seasons prior.

# Dynamic Kickoff

The NFL introduced the [dynamic kickoff format](https://operations.nfl.com/the-rules/rules-changes/dynamic-kickoff-rule-explainer/) for the 2024 season, with the stated goal of increasing the return rate and reducing high-speed collisions resulting in injuries. With these goals in mind, can the rule change be considered successful after one season?

```{r get_kickoff_data, include=TRUE}
kickoff_99_24 <- load_pbp(seasons = TRUE) %>% 
  filter(play_type == 'kickoff',
         season_type == 'REG')


kickoff_99_24 <- kickoff_99_24 %>%
  mutate(injury = if_else(str_detect(desc, 'injur'), 1, 0),
         injury_head = if_else(str_detect(desc, 'head injury'), 1, 0),
         injury_neck = if_else(str_detect(desc, 'neck injury'), 1, 0))

kickoff_vars <- c('touchback', 'return_yards', 'kick_distance', 'kickoff_inside_twenty',
                  'kickoff_in_endzone', 'kickoff_fair_catch', 'return_touchdown',
                  # it appears that injury coding changed and the desc field doesn't list injury type anymore 
                  'injury', 'injury_head', 'injury_neck')


kickoff_rates_99_24 <- kickoff_99_24 %>% 
  group_by(season) %>% 
  summarise(across(kickoff_vars,
                   list(
                     # mean = ~round(mean(., na.rm=TRUE), 5)
                     mean = ~mean(., na.rm=TRUE)
                   ),
                   .names = "{.fn}_{.col}"
                   ),
            .groups = 'drop') %>% 
  mutate(return_rate = 1 - mean_touchback - mean_kickoff_fair_catch)


plot_kickoff_var <- function(var){
  kickoff_rates_99_24 %>% 
  ggplot(.,
         aes(x=season,
             y= {{ var }})) + 
  geom_col() + 
  geom_mean_lines(data = . %>% filter(season != 2024),
                  aes(y0= {{ var }})) + 
  labs(x='Season',
       title="Evaluating the Impact of the NFL's Dynamic Kickoff Rule in 2024", 
       caption='Source: {nflverse}<br>Mean line excludes 2024 season') + 
  scale_y_continuous(labels = scales::percent_format(),
                     breaks = scales::pretty_breaks()) + 
  scale_x_continuous(breaks = scales::pretty_breaks()) + 
  theme_nfl_analytics()
}

# kickoff_vars <- c('touchback', 'return_yards', 'kick_distance', 'kickoff_inside_twenty',
#                   'kickoff_in_endzone', 'kickoff_fair_catch', 'return_touchdown',
#                   # it appears that injury coding changed and the desc field doesn't list injury type anymore 
#                   'injury', 'injury_head', 'injury_neck')

plot_kickoff_var(mean_touchback)
plot_kickoff_var(return_rate)
plot_kickoff_var(mean_injury)
plot_kickoff_var(mean_kickoff_in_endzone)
```

::: column-margin
Ideally, I would parse play descriptions to determine whether the rate of head and neck injuries has changed on kickoffs, because those are the injuries that the NFL is trying to get out of the game; however, starting in the 2016 season, {nflfastr} no longer captures this information in play-by-play data. 

I hope to explore this question further using another data service in a future project.
:::


```{r pca_experimentation, include=FALSE}
kickoff_test <- kickoff_99_24 %>% 
  select(season, kickoff_vars) %>% 
  na.omit()

pca_matrix <- scale(kickoff_rates_99_24 %>% select(-season))

pca_result <- prcomp(pca_matrix, center = TRUE, scale. = FALSE)

df_kickoff_pca <- as.data.frame(pca_result$x[, 1:2]) %>%
  mutate(
    season = kickoff_rates_99_24$season
  )

var_explained <- summary(pca_result)$importance[2, 1:2] * 100

df_kickoff_pca %>% 
  ggplot(., 
         aes(x = PC1, 
             y = PC2, 
             fill = season)) +
  geom_point(size = 4, alpha = 0.75, shape = 21, color = "white") +
  ggrepel::geom_text_repel(aes(label = season)) + 
  geom_hline(yintercept = 0, linetype = "dashed", alpha = 0.7) +
  geom_vline(xintercept = 0, linetype = "dashed", alpha = 0.7) +
  labs(
    title = "PCA of Kickoff Rate Data by Season",
    x = paste0("PC1 (", round(var_explained[1], 1), "%)"),
    y = paste0("PC2 (", round(var_explained[2], 1), "%)"),
  ) + 
  scale_y_continuous(breaks = scales::pretty_breaks(),
                     limits = c(-5, 5)) + 
  scale_x_continuous(breaks = scales::pretty_breaks(),
                     limits = c(-5, 5)) + 
  theme_nfl_analytics()
```

# New City, New You: Derrick Henry and Saquon Barkley

```{r barkley_henry_cols, include=TRUE}
#| echo=FALSE
barkley_henry_cols <- c('D.Henry' = '#241773',
                        'S.Barkley' = '#acc0c6')
```

```{r make_barkley_henry_df, include=TRUE}
#| echo=FALSE
pbp_16_24 <- load_pbp(seasons = 2016:2024) %>% 
  filter(season_type == 'REG',
         posteam %in% c('TEN', 'NYG', 'BAL', 'PHI')) %>% 
  mutate(ball_carrier = if_else(is.na(rusher), receiver, rusher),
         ball_carrier_id = if_else(is.na(rusher_player_id), receiver_player_id, rusher_player_id)) %>%
  arrange(season, game_date, play_id) %>% 
  filter(ball_carrier %in% c('D.Henry', 'S.Barkley'),
         play_type != 'no_play')

barkley_henry <- pbp_16_24 %>% 
  group_by(season, posteam, ball_carrier, ball_carrier_id) %>% 
  summarise(cumsum_epa = cumsum(epa),
            touch = row_number(),
            ttl_touch = max(touch),
            epa_per_play = mean(epa, na.rm=TRUE),
            .groups = 'drop')

barkley_henry_epa_per_play <- pbp_16_24 %>% 
  group_by(season, ball_carrier) %>% 
  summarise(epa_per_play = mean(epa, na.rm=TRUE),
            ttl_epa = sum(epa, na.rm=TRUE), 
            .groups = 'drop')
```

```{r barkley_henry_plot, include=TRUE}
#| fig.width=9
barkley_henry %>% 
  ggplot(.,
         aes(x=touch,
             y=cumsum_epa,
             color=ball_carrier)) + 
  geom_hline(aes(yintercept = 0), linetype='dashed') + 
  geom_line(linewidth=1.2) + 
  facet_wrap(~season) + 
  labs(title=glue("New city, new you: <span style='color:#241773'>Derrick Henry</span> and <span style='color:	#acc0c6'>Saquon Barkley</span>'s career 2024 years"),
       subtitle='<br>Comparing the 2024 season with past seasons in terms of cumulative Expected Points Added',
       y='Cumulative EPA',
       x='\nTouch (carry/catch)',
       caption='**Source**: {nflverse}') + 
  scale_color_manual(values = barkley_henry_cols) + 
  theme_nfl_analytics() + 
  theme(legend.position = 'none',
        plot.subtitle = element_textbox(lineheight = .5))
```

# Positional value: how do WRs and RBs stack up?

Perhaps more than most vignettes in this post, this topic could be a post on its own (...or a book). There's been a lot written already about the decline in the value of the RB position in the contemporary NFL. The goal of this story is simple -- I wanted to chart the (cumulative) total expected points added by players in both position groups to see how they compare.

```{r ball_carrier_epa, include=TRUE}
#| echo=FALSE
ball_carrier_epa <- pbp_2024_reg %>% 
  mutate(ball_carrier = if_else(is.na(rusher), receiver, rusher),
         ball_carrier_id = if_else(is.na(rusher_player_id), receiver_player_id, rusher_player_id)) %>%
  arrange(game_date, play_id) %>% 
  filter(!is.na(ball_carrier),
         play_type != 'no_play') %>% 
  left_join(x=.,
            y=rosters %>% distinct(position, gsis_id),
            by=c('ball_carrier_id' = 'gsis_id')) %>%
  # group_by(posteam, ball_carrier, ball_carrier_id) %>% 
  group_by(posteam, ball_carrier, ball_carrier_id, position) %>%
  # something wrong with my touches calc -- it's way too many
  reframe(touch = row_number(),
         ttl_touch = max(touch),
         cumsum_epa = cumsum(epa)) %>% 
  arrange(-touch)
```

This is a story about positional value, with only a small number of running backs generating much in the way of EPA. (Should also look at it on a per-play basis).

```{r ball_carrier_epa_viz, include=TRUE}
ball_carrier_epa %>% 
  filter(position != 'QB',
         ttl_touch >= 150) %>% 
  group_by(posteam, ball_carrier) %>% 
  slice_max(touch) %>% 
  mutate(epa_per_touch = cumsum_epa / touch) %>% 
  ungroup() %>% 
  arrange(-cumsum_epa) %>% 
  select(posteam, ball_carrier_id, ball_carrier, everything()) %>% 
  gt() %>% 
  nflplotR::gt_nfl_logos(columns = "posteam") %>% 
  gt_theme_538()
```

Granted, RB value may be more inherent in the touches/carries -- someone needs to support carrying the bulk of the offensive snaps; WRs just can't tally that amount of touches, even in pass-heavy offenses.

```{r top_epa_ball_carrier, include=TRUE}
top_epa_ball_carrier <- ball_carrier_epa %>% 
  filter(!position %in% c('QB', 'TE')) %>% 
  filter(ttl_touch >= 125) %>% 
  filter(touch == ttl_touch) %>% 
  slice_max(cumsum_epa, n = 10) %>% 
  pull(ball_carrier)
```


```{r rush_epa_rbs, include=TRUE, fig.width=9}
# Look at the cumulative sum of expected points (with proper citation from Substack!).
ball_carrier_epa %>% 
  filter(!position %in% c('QB', 'TE')) %>% 
  mutate(top_epa_player = if_else(ball_carrier %in% top_epa_ball_carrier, 
                                  'Top', 'Other')) %>% 
  filter(ttl_touch >= 125) %>% 
  ggplot(.,
         aes(x=touch,
             y=cumsum_epa,
             color=top_epa_player,
             alpha=top_epa_player)) +
  geom_line(aes(group=ball_carrier)) +
  # geom_text()
  ggrepel::geom_text_repel(data=. %>% filter(touch == ttl_touch) %>% slice_max(cumsum_epa, n = 10),
                           aes(label=ball_carrier),
                           color='black',
                           fontface='bold',
                           box.padding = .5,
                           nudge_x = 1,
                           force = 10) +
  labs(title='With fewer touches, top WRs generate more expected points added than RBs',
       subtitle='WRs generate value through moving the chains and scoring points<br>RB value is in their sheer amount of touches',
       caption='**Source**: {nflverse}<br>Minimum 125 touches',
       x='Touch #',
       y='Cumulative Expected Points Added') +
  scale_color_manual(values = c('Top' = 'steelblue2',
                                'Other' = 'gray70')) + 
  scale_alpha_manual(values = c('Top' = 1,
                                'Other' = .2)) + 
  theme_nfl_analytics() +
  theme(legend.position = 'none')
```

# The hip drop tackle 

```{r df_fines, include=TRUE}
# fines_url <- "https://www.spotrac.com/nfl/fines/_/year/2024"

# df_fines <- fines_url %>%
#   rvest::read_html() %>%
#   rvest::html_nodes(xpath='//*[@id="table-wrapper"]/div[2]') %>% 
#   html_table() %>% 
#   .[[1]] %>% 
#   clean_names() %>% 
#   # removes total from table
#   filter(!is.na(week))
```

```{r df_fines_grouped, include=TRUE}
# df_fines <- df_fines %>% 
#   filter(player != '') %>% 
#   mutate(amount_lost = parse_number(amount_lost),
#          date = parse_date_time(date, orders = "mdy"),
#          infraction = str_extract(infraction, "(?<=/ ).*")) %>% 
#   mutate(infraction = if_else(is.na(infraction), 'Impermissible Use of the Helmet', infraction))
# 
# df_fines_grouped <- df_fines %>% 
#   group_by(infraction) %>% 
#   summarise(ttl_fines = sum(amount_lost, na.rm = TRUE),
#             count_fines = n(),
#             .groups = 'drop') %>% 
#   mutate(avg_fine_per_infraction = ttl_fines / count_fines)
```

The hip drop tackle was outlawed ahead of the 2024 season. In this style of tackle, a defender wraps the ball carrier from behind and drops their weight to attempt to bring the player to the ground. While this kind of tackle does not *look* flagrant, like using the crown of the helmet, it has led to lots of lower body injuries for ball carriers.

With this new tackle being a point of emphasis, it begs the question -- how was it enforced? According to Spotrac.com, the NFL issued `r df_fines_grouped %>% filter(infraction == 'Hip Drop Tackle') %>% pull(count_fines)` fines for hip drop tackles in 2024 for a total of `r scales::dollar(df_fines_grouped %>% filter(infraction == 'Hip Drop Tackle') %>% pull(ttl_fines), accuracy = 1)`.

At an average fine amount of 
`r scales::dollar(df_fines_grouped %>% filter(infraction == 'Hip Drop Tackle') %>% pull(avg_fine_per_infraction), accuracy = 1)`, the hip drop tackle was among the smallest fines levied in 2024, indicating that the NFL may be easing into how it's removing the tackle from the game.

::: column-margin
On a per fine basis, infractions like roughing the passer, impermissible use of the helmet, and the horse collar tackle were all more penalized than the hip drop tackle in 2024.
:::

```{r df_fines_grouped_gt, include=TRUE}
df_fines_grouped %>% 
  arrange(-ttl_fines) %>% 
  gt() %>% 
  cols_label(infraction = 'Infraction',
             ttl_fines = 'Total Fine Amount ($)',
             count_fines = '# Fines',
             avg_fine_per_infraction = 'Average Fine') %>% 
    tab_header(
    title = md("<img src='https://raw.githubusercontent.com/nflverse/nflverse-pbp/master/NFL.png' style='height:30px;'>    Fines in the 2024 NFL Season by Infraction Type")) %>%
  tab_source_note(source_note = md("**Source**: Spotrac.com")) %>% 
  fmt_currency(columns = c(ttl_fines, avg_fine_per_infraction),
               decimals = 0) %>% 
  tab_style(
    style = list(
      cell_fill(color = "lightgray"),
      cell_text(weight = "bold")
    ),
    locations = cells_body(
      rows = infraction == 'Hip Drop Tackle'
    )
  ) %>% 
  gt_theme_538()
```



# Bonus: Weird Plays from 2024

## Josh Allen throws a touchdown pass to himself

{{< video https://youtu.be/0v0PPqGS49k?si=fkCqf92PGRMrRLfl >}}

```{r josh_allen, include=TRUE}
pbp_2024_reg %>% 
  filter(posteam == 'BUF',
         lateral_receiver_player_name == 'J.Allen',
         touchdown == 1) %>% 
  select(desc, td_player_name)
```

## Cameron Dicker's historic fair catch kick 

{{< video https://youtu.be/b77POLcqb0Q?si=rQHxVihJCKUiAMb9 >}}

```{r fair_catch_kick, include=TRUE}
pbp_2024_reg %>% 
  filter(posteam == 'LAC',
         kicker_player_name == 'C.Dicker',
         str_detect(desc, 'Fair-Catch Kick'),
         field_goal_result == 'made') %>% 
  select(desc)
```


